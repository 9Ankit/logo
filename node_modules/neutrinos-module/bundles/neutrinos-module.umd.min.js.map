{
  "version": 3,
  "file": "neutrinos-module.umd.min.js",
  "sources": [
    "ng://neutrinos-module/out/src/app/neutrinos-module/neutrinos-file/services/n-fileIO.service.ts",
    "ng://neutrinos-module/out/src/app/neutrinos-module/neutrinos-file/directives/n-camera.directive.ts",
    "ng://neutrinos-module/out/src/app/neutrinos-module/neutrinos-file/directives/n-download.directive.ts",
    "ng://neutrinos-module/out/src/app/neutrinos-module/neutrinos-file/directives/n-scanner.directive.ts",
    "ng://neutrinos-module/out/src/app/neutrinos-module/neutrinos-file/directives/n-video.directive.ts",
    "ng://neutrinos-module/out/src/app/neutrinos-module/neutrinos-file/directives/n-barcode.directive.ts",
    "ng://neutrinos-module/out/src/app/neutrinos-module/neutrinos-file/directives/n-tts.directive.ts",
    "ng://neutrinos-module/out/src/app/neutrinos-module/neutrinos-file/directives/n-fingerprint.directive.ts",
    "ng://neutrinos-module/out/src/app/neutrinos-module/neutrinos-file/directives/n-ocr.directive.ts",
    "ng://neutrinos-module/out/src/app/neutrinos-module/neutrinos-file/directives/n-shake.directive.ts",
    "ng://neutrinos-module/out/src/app/neutrinos-module/neutrinos-file/fileUpload/n-fileUpload.component.ts",
    "ng://neutrinos-module/out/src/app/neutrinos-module/neutrinos-components/nAlertComponent/n-alert.component.ts",
    "ng://neutrinos-module/out/src/app/neutrinos-module/neutrinos-components/nAlertComponent/n-alert.service.ts",
    "ng://neutrinos-module/out/src/app/neutrinos-module/neutrinos-components/nToggleoptionsComponent/n-toggleoptions.component.ts",
    "ng://neutrinos-module/out/src/app/neutrinos-module/neutrinos-components/nSignatureComponent/n-signature.component.ts",
    "ng://neutrinos-module/out/src/app/neutrinos-module/neutrinos.module.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n// import { SystemService } from 'app/service/system.service';\nimport { NSystemService} from 'neutrinos-seed-services';\n// import { RequestOptions } from '@angular/http';\n\n\ndeclare const window: any;\ndeclare const cordova: any;\ndeclare const navigator: any;\ndeclare const scan: any;\ndeclare const textocr: any;\ndeclare const TTS: any;\ndeclare const shake: any;\ndeclare const Fingerprint: any;\n\n@Injectable()\nexport class NFileIOService {\n  systemService;\n  appProperties;\n\n  constructor(private http: HttpClient) {\n    this.systemService = NSystemService.getInstance();\n    this.appProperties = this.systemService.getVal('properties');\n  }\n\n  private getFileInfo(options): any {\n    let dataModelURL = this.systemService.getDataModelUrl();\n    if (options.metadata) {\n      dataModelURL += `${this.appProperties.appName}_${options.entityName}.files?filter={\"metadata.key\": \"${options.metadata.key}\"}`;\n    } else {\n      dataModelURL += `${this.appProperties.appName}_${options.entityName}.files/${options.fileId}`;\n    }\n    return this.http.get(dataModelURL);\n  }\n\n  private getFormData(fileUri: string): Promise<FormData> {\n    return new Promise((resolve, reject) => {\n      window.resolveLocalFileSystemURL(fileUri, (fileEntry) => {\n        fileEntry.file((file) => {\n          const reader = new FileReader();\n          reader.onerror = evt => {\n            return reject(evt);\n          };\n          reader.onloadend = evt => {\n            const formData = new FormData();\n            const blob = new Blob([new Uint8Array(reader.result)], { type: file.type });\n            formData.append('file', blob, file.name);\n            return resolve(formData);\n          };\n          reader.readAsArrayBuffer(file);\n        });\n      }, (error) => {\n        return reject(error);\n      });\n    });\n  }\n\n  public getPicture(cameraOptions) {\n    return new Promise((resolve, reject) => {\n      document.addEventListener('deviceready', () => {\n        navigator.camera.getPicture((imageUri) => {\n          this.getFormData(imageUri).then(res => {\n            return resolve(res);\n          }).catch(err => reject(err));\n        }, (error) => {\n          return reject(error);\n        }, cameraOptions);\n      }, false);\n    });\n  }\n\n  public scanPicture(scanOptions) {\n    return new Promise((resolve, reject) => {\n      document.addEventListener('deviceready', () => {\n        if(scanOptions.hasOwnProperty('sourceType') && scanOptions.hasOwnProperty('doUpload')) {\n          scan.scanDoc(scanOptions.sourceType, (imageUri) => {\n            if (scanOptions.doUpload) {\n                this.getFormData(imageUri).then(res => {\n                  return resolve(res);\n                }).catch(err => reject(err));\n            }\n            else {\n                resolve(imageUri);\n            }\n          }, (error) => {\n            return reject(error);\n          });\n        } else {\n          reject('sourceType not found');\n        }\n      }, false);\n    });\n  }\n\n//Barcode\n  public getBarcode(barcodeOptions) {\n    return new Promise((resolve, reject) => {\n      document.addEventListener('deviceready', () => {\n        cordova.plugins.barcodeScanner.scan((result)=> {\n          if(result.cancelled) {\n            return reject(result);\n          } else {\n            return resolve(result);\n          }\n        }, (error)=> {\n          return reject(error);\n        }, barcodeOptions);\n      }, false);\n    });\n  }\n\n//Video\n  public getVideo(videoOptions) {\n    return new Promise((resolve, reject) => {\n      document.addEventListener('deviceready', () => {\n        navigator.device.capture.captureVideo((mediaFiles) => {\n          var imageUri = mediaFiles[0].fullPath;        \n          this.getFormData(imageUri).then(res => {\n            return resolve(res);\n          }).catch(err => reject(err));\n        }, (error) => {\n          return reject(error);\n        }, {});\n      }, false);\n    });\n  }\n\n//tts\n  public getTts(ttsOptions) {\n    return new Promise((resolve, reject) => {\n      document.addEventListener('deviceready', () => {\n        if(ttsOptions.hasOwnProperty('text')) {\n          TTS.speak(ttsOptions).then(() => {\n            return resolve('success');\n          }, (reason) => {\n            return reject(reason);\n          });\n        } else {\n          reject('text not found');\n        }\n      }, false);\n    });\n  }\n\n//shake\n  public getShake(shakeOptions) {\n    return new Promise((resolve, reject) => {\n      document.addEventListener('deviceready', () => {\n        if(shakeOptions.hasOwnProperty('start') && shakeOptions.hasOwnProperty('sensitivity')) {\n          if(shakeOptions.start) {\n            shake.startWatch(() => {\n              return resolve('success');\n            }, shakeOptions.sensitivity, () => {\n              return reject('error');\n            });\n          } else {\n            shake.stopWatch();\n          }\n        } else {\n          reject('start or sensitivity not found');\n        }\n      }, false);\n    });\n  }\n\n//ocr\n  public getOcr(ocrOptions) {\n      return new Promise((resolve, reject) => {\n        document.addEventListener('deviceready', () => {\n          if(ocrOptions.hasOwnProperty('uriOrBase') && ocrOptions.hasOwnProperty('returnType')) {\n            navigator.camera.getPicture((imageData) => {\n                textocr.recText(ocrOptions.uriOrBase, ocrOptions.returnType, imageData, (recognizedText) => {\n                return resolve(recognizedText);\n              }, (message) => {\n                return reject(message);\n              });\n            }, (message) => {\n              return reject(message);\n            }, ocrOptions); \n          } else {\n            reject('uriOrBase or returnType not found');\n          }\n \n        }, false);\n    });\n  }\n\n\n//fingerprint\n  public getFingerprint(fingerprintOptions) {\n    return new Promise((resolve, reject) => {\n      document.addEventListener('deviceready', () => {\n        if(fingerprintOptions.hasOwnProperty('clientId') && fingerprintOptions.hasOwnProperty('clientSecret')) {\n          Fingerprint.isAvailable((result) => {\n            Fingerprint.show(fingerprintOptions, () => {\n              return resolve('success');\n            }, (err) => {\n              return reject(err);\n            });\n          }, (message) => {\n            return reject(message);\n          });\n        } else {\n          reject('clientId or clientSecret not found');\n        }\n      }, false);\n    });\n  }\n\n  public upload(options): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let body: FormData = new FormData();\n      if (options.formData) {\n        body = options.formData;\n      } else if (options.files) {\n        body.append('file', options.files);\n      } else {\n        reject('No file selected!');\n      }\n      if (options.metadata) {\n        body.append('metadata', JSON.stringify(options.metadata));\n      }\n\n      const headers = { 'Content-Type': 'no-content' };\n      const url = this.systemService.getFileIOUrl() + `${options.entityName}`;\n      let temp_headers = { headers: this.setHeaders(headers) }\n      this.http.post(url, body, temp_headers)\n        .subscribe(res => resolve(res)\n        , err => reject(err));\n    });\n  }\n\n  public download(options: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (options.entityName && (options.metadata || options.fileId)) {\n        this.getFileInfo(options).subscribe((res) => {\n          if (options.metadata) {\n            res = res[res.length - 1];\n          } else {\n            res = res.result;\n          }\n          const fileInfo = {\n            contentType: '',\n            filename: ''\n          };\n          if (res && res['contentType'] && res['filename']) {\n            fileInfo['contentType'] = res['contentType'];\n            fileInfo['filename'] = res['filename'];\n            let fileIOURL = this.systemService.getFileIOUrl();\n            if (options.metadata) {\n              fileIOURL += `${options.entityName}?metadataFilter={\"metadata.key\": \"${options.metadata.key}\"}`;\n            } else {\n              fileIOURL += `${options.entityName}/${options.fileId}`;\n            }\n            const headers = {\n              'Accept': fileInfo.contentType\n            };\n            this.http.get(fileIOURL, { headers: this.setHeaders(headers), responseType: 'blob' }).subscribe((response: any) => {\n              const blob = new Blob([response.body], { type: fileInfo.contentType });\n              this.saveFile(blob, fileInfo.filename).then((resp) => {\n              }).catch(err => reject(err));\n            }, err => reject(err));\n          } else {\n            reject('fileInfo not exit');\n          }\n        }, err => reject(err));\n      } else {\n        return reject('download options not found');\n      }\n    });\n  }\n\n  public saveFile(data: Blob, filename: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (this.systemService.checkDevice() == 'mobile') {\n        const storageLocation = this.systemService.isAndroid() ? cordova.file.externalRootDirectory : cordova.file.documentsDirectory;\n        this.createDirectory(storageLocation, this.appProperties.appName, filename, data)\n          .then(res => resolve(res))\n          .catch(err => reject(err));\n      } else {\n        this.saveToBrowser(data, filename).then(res => resolve(res));\n      }\n    });\n  }\n\n  private saveToBrowser(data: Blob, fileName: string) {\n    return new Promise((resolve) => {\n      // Edge 20+\n      const isEdge = !(/*@cc_on!@*/false || !!document['documentMode']) && !!window.StyleMedia;\n      if (isEdge) {\n        window.navigator.msSaveBlob(data, fileName);\n      } else {\n        const downloadURL = window.URL.createObjectURL(data);\n        const anchor = document.createElement('a');\n        document.body.appendChild(anchor);\n        anchor.style.display = 'none';\n        anchor.download = fileName;\n        anchor.href = downloadURL;\n        anchor.click();\n        window.URL.revokeObjectURL(downloadURL);\n        document.body.removeChild(anchor);\n        anchor.remove();\n      }\n      return resolve('download complete');\n    });\n  }\n\n  private createDirectory(rootDirectory: any, appName: string, fileName: string, data: Blob) {\n    return new Promise((resolve, reject) => {\n      window.resolveLocalFileSystemURL(rootDirectory, (fileSystem) => {\n        fileSystem.getDirectory(appName, { create: true }, (dirEntry) => {\n          this.checkFileExist(dirEntry.nativeURL, fileName, 0, (newFileName) => {\n            dirEntry.getFile(newFileName, { create: true }, (targetFile) => {\n              targetFile.createWriter((fileWriter) => {\n                fileWriter.onwriteend = () => {\n                  return resolve(targetFile.toURL());\n                };\n\n                fileWriter.onerror = (err) => {\n                  return reject(err);\n                };\n                fileWriter.write(data);\n              });\n            });\n          });\n        }, err => reject(err));\n      }, err => reject(err));\n    });\n  }\n\n  private checkFileExist = (path: string, fileName: string, i: number, callback) => {\n    return window.resolveLocalFileSystemURL(path + fileName, () => {\n      let length = 4;\n      if (fileName.lastIndexOf('(') > -1) {\n        const isExist = parseInt(fileName.slice((fileName.lastIndexOf('(') + 1), fileName.lastIndexOf(')')), 10);\n        if (!isNaN(isExist)) {\n          i = isExist + 1;\n          if (i > 10 && i < 100) {\n            length += 1;\n          } else if (i > 100) {\n            length += 2;\n          }\n          fileName = fileName.slice(0, (fileName.lastIndexOf('.') - length)) + ' (' + i + ')' + fileName.slice(fileName.lastIndexOf('.'));\n        } else {\n          i += 1;\n          fileName = fileName.slice(0, (fileName.lastIndexOf('.'))) + fileName.slice(fileName.lastIndexOf('.'));\n          fileName = fileName.slice(0, (fileName.lastIndexOf('.'))) + ' (' + i + ')' + fileName.slice(fileName.lastIndexOf('.'));\n        }\n      } else {\n        i += 1;\n        fileName = fileName.slice(0, (fileName.lastIndexOf('.'))) + fileName.slice(fileName.lastIndexOf('.'));\n        fileName = fileName.slice(0, (fileName.lastIndexOf('.'))) + ' (' + i + ')' + fileName.slice(fileName.lastIndexOf('.'));\n      }\n      return this.checkFileExist(path, fileName, i, callback);\n    }, () => {\n      return callback(fileName);\n    });\n  }\n\n  private setHeaders(headerJSON: Object): HttpHeaders {\n    let headers = new HttpHeaders();\n    for (const key in headerJSON) {\n      if (key) {\n        headers = headers.set(key, headerJSON[key]);\n      }\n    }\n    return headers;\n  }\n\n}\n",
    "import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener } from '@angular/core';\n// import { FileIOService } from '../services/filesystem.service';\nimport { NFileIOService } from '../services/n-fileIO.service';\nimport { NDirectiveOptions } from './directive.class';\n\n\ndeclare const navigator: any;\n\nexport interface CameraOptions {\n  quality?: 50;\n  destinationType?: 1 | 2;\n  EncodingType?: 0 | 1;\n  MediaType?: 0 | 1 | 2;\n  PictureSourceType?: 0 | 1 | 2;\n}\n\n@Directive({\n  selector: '[n-camera]'\n})\nexport class NCameraDirective {\n  @Input() cameraOptions: NDirectiveOptions;\n  @Output() onsuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onerror: EventEmitter<any> = new EventEmitter();\n\n  constructor(private fsv: NFileIOService) { }\n\n  @HostListener('click') methodToHandleMouseClickAction() {\n    this.getPicture()\n      .then(sucess => this.onsuccess.emit(sucess))\n      .catch(error => this.onerror.emit(error));\n  }\n\n  getPicture(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.fsv.getPicture(this.cameraOptions).then(res => {\n        const options = {\n          'formData': res,\n          'entityName': this.cameraOptions.entityName,\n          'metadata': this.cameraOptions.metadata\n        };\n        this.fsv.upload(options)\n          .then(uri => resolve(uri))\n          .catch(err => reject(err));\n      }).catch(err => reject(err));\n    });\n  }\n}\n",
    "import { Directive, Input, Output, EventEmitter, HostListener } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n// import { FileIOService } from '../services/filesystem.service';\nimport { NFileIOService } from '../services/n-fileIO.service';\nimport { NDirectiveOptions } from './directive.class';\n\n\n@Directive({ selector: '[n-download]' })\nexport class NDownloadDirective {\n  @Input() downloadOptions: NDirectiveOptions;\n  @Output() onsuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onerror: EventEmitter<any> = new EventEmitter();\n\n  constructor(private fsv: NFileIOService) { }\n\n  @HostListener('click') methodToHandleMouseClickAction() {\n    this.downloadFile()\n      .then(res => this.onsuccess.emit(res))\n      .catch(err => this.onerror.emit(err));\n  }\n\n  downloadFile() {\n    return this.fsv.download(this.downloadOptions);\n  }\n}\n",
    "import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener } from '@angular/core';\n// import { FileIOService } from '../services/filesystem.service';\nimport { NFileIOService } from '../services/n-fileIO.service';\nimport { NDirectiveOptions } from './directive.class';\n\n@Directive({\n  selector: '[n-scan]'\n})\nexport class NScanDirective {\n  @Input() scanOptions: NDirectiveOptions;\n  @Output() onsuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onerror: EventEmitter<any> = new EventEmitter();\n\n  constructor(private fsv: NFileIOService) { }\n\n  @HostListener('click') methodToHandleMouseClickAction() {\n    this.getPicture()\n      .then((sucess) => this.onsuccess.emit(sucess))\n      .catch((error) => this.onerror.emit(error));\n  }\n\n  getPicture(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.fsv.scanPicture(this.scanOptions).then(res => {\n\n        if (this.scanOptions.doUpload) {\n          const options = {\n            'formData': res,\n            'entityName': this.scanOptions.entityName,\n            'metadata': this.scanOptions.metadata\n          };\n          this.fsv.upload(options).then(uri => {\n            resolve(uri);\n          }).catch(err => reject(err));\n        }\n        else\n        {\n          resolve(res);\n        }\n      }).catch((err) => {\n        return reject(err);\n      });\n    });\n  }\n}\n",
    "import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener } from '@angular/core';\n// import { FileIOService } from '../services/filesystem.service';\nimport { NFileIOService } from '../services/n-fileIO.service';\nimport { NDirectiveOptions } from './directive.class';\n\n\ndeclare const navigator: any;\n\n@Directive({\n  selector: '[n-video]'\n})\nexport class NVideoDirective {\n  @Input() videoOptions: NDirectiveOptions;\n  @Output() onsuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onerror: EventEmitter<any> = new EventEmitter();\n\n  constructor(private fsv: NFileIOService) { }\n\n  @HostListener('click') methodToHandleMouseClickAction() {\n    this.getVideo()\n      .then(sucess => this.onsuccess.emit(sucess))\n      .catch(error => this.onerror.emit(error));\n  }\n\n  getVideo(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.fsv.getVideo(this.videoOptions).then(res => {\n        const options = {\n          'formData': res,\n          'entityName': this.videoOptions.entityName,\n          'metadata': this.videoOptions.metadata\n        };\n        this.fsv.upload(options)\n          .then(uri => resolve(uri))\n          .catch(err => reject(err));\n      }).catch(err => reject(err));\n    });\n  }\n}\n",
    "import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener } from '@angular/core';\n// import { FileIOService } from '../services/filesystem.service';\nimport { NFileIOService } from '../services/n-fileIO.service';\nimport { NDirectiveOptions } from './directive.class';\n\n\ndeclare const navigator: any;\n\n@Directive({\n  selector: '[n-barcode]'\n})\nexport class NBarcodeDirective {\n  @Input() barcodeOptions: NDirectiveOptions;\n  @Output() onsuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onerror: EventEmitter<any> = new EventEmitter();\n\n  constructor(private fsv: NFileIOService) { }\n\n  @HostListener('click') methodToHandleMouseClickAction() {\n    this.getBarcode()\n    .then(sucess => this.onsuccess.emit(sucess))\n    .catch(error => this.onerror.emit(error));\n  }\n\n  getBarcode(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.fsv.getBarcode(this.barcodeOptions).then(res => {\n        return resolve(res);\n      }).catch(err => reject(err));\n    });\n  }\n}\n",
    "import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener } from '@angular/core';\n// import { FileIOService } from '../services/filesystem.service';\nimport { NFileIOService } from '../services/n-fileIO.service';\nimport { NDirectiveOptions } from './directive.class';\n\ndeclare const navigator: any;\n\n@Directive({\n  selector: '[n-tts]'\n})\nexport class NTtsDirective {\n  @Input() ttsOptions: NDirectiveOptions;\n  @Output() onsuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onerror: EventEmitter<any> = new EventEmitter();\n\n  constructor(private fsv: NFileIOService) { }\n\n  @HostListener('click') methodToHandleMouseClickAction() {\n    this.getTts()\n      .then(sucess => this.onsuccess.emit(sucess))\n      .catch(error => this.onerror.emit(error));\n  }\n\n  getTts(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.fsv.getTts(this.ttsOptions).then(res => {\n        return resolve(res);\n      }).catch(err => reject(err));\n    });\n  }\n}\n",
    "import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener } from '@angular/core';\n// import { FileIOService } from '../services/filesystem.service';\nimport { NFileIOService } from '../services/n-fileIO.service';\nimport { NDirectiveOptions } from './directive.class';\n\n\ndeclare const navigator: any;\n\n@Directive({\n  selector: '[n-fingerprint]'\n})\nexport class NFingerprintDirective {\n  @Input() fingerprintOptions: NDirectiveOptions;\n  @Output() onsuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onerror: EventEmitter<any> = new EventEmitter();\n\n  constructor(private fsv: NFileIOService) { }\n\n  @HostListener('click') methodToHandleMouseClickAction() {\n    this.getFingerprint()\n      .then(sucess => this.onsuccess.emit(sucess))\n      .catch(error => this.onerror.emit(error));\n  }\n\n  getFingerprint(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.fsv.getFingerprint(this.fingerprintOptions).then(res => {\n        return resolve(res);\n      }).catch(err => reject(err));\n    });\n  }\n}\n",
    "import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener } from '@angular/core';\n// import { FileIOService } from '../services/filesystem.service';\nimport { NFileIOService } from '../services/n-fileIO.service';\nimport { NDirectiveOptions } from './directive.class';\n\ndeclare const navigator: any;\n\n@Directive({\n  selector: '[n-ocr]'\n})\nexport class NOcrDirective {\n  @Input() ocrOptions: NDirectiveOptions;\n  @Output() onsuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onerror: EventEmitter<any> = new EventEmitter();\n\n  constructor(private fsv: NFileIOService) { }\n\n  @HostListener('click') methodToHandleMouseClickAction() {\n    this.getOcr()\n      .then(sucess => this.onsuccess.emit(sucess))\n      .catch(error => this.onerror.emit(error));\n  }\n\n  getOcr(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.fsv.getOcr(this.ocrOptions).then(res => {\n        return resolve(res);\n      }).catch(err => reject(err));\n    });\n  }\n}\n",
    "import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener } from '@angular/core';\n// import { FileIOService } from '../services/filesystem.service';\nimport { NFileIOService } from '../services/n-fileIO.service';\nimport { NDirectiveOptions } from './directive.class';\n\n\ndeclare const navigator: any;\n\n@Directive({\n  selector: '[n-shake]'\n})\nexport class NShakeDirective {\n  @Input() shakeOptions: NDirectiveOptions;\n  @Output() onsuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onerror: EventEmitter<any> = new EventEmitter();\n\n  constructor(private fsv: NFileIOService) { }\n\n  @HostListener('click') methodToHandleMouseClickAction() {\n    this.getShake()\n      .then(sucess => this.onsuccess.emit(sucess))\n      .catch(error => this.onerror.emit(error));\n  }\n\n  getShake(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.fsv.getShake(this.shakeOptions).then(res => {\n        return resolve(res);\n      }).catch(err => reject(err));\n    });\n  }\n}\n",
    "import { Component, Input, Output, EventEmitter, ViewChild, Renderer2 } from '@angular/core';\n// import { FileIOService } from '../services/filesystem.service';\nimport { NFileIOService } from '../services/n-fileIO.service';\n\n\n@Component({\n  selector: 'n-file-upload',\n  styles: [`.bh-file-upload{padding-left:8px;padding-right:8px}.bh-file-upload-cancel{height:24px;width:24px;position:relative;top:24px;left:-12px}::ng-deep [dir=rtl] .bh-file-upload-cancel{right:-12px;left:0}.bh-file-upload-cancel mat-icon{border-radius:12px;vertical-align:baseline}.bh-file-upload-done{height:24px;width:24px;position:relative;top:20px;left:-13px}::ng-deep [dir=rtl] .bh-file-upload-done{right:-12px;left:0}.bh-file-upload-done mat-icon{border-radius:12px;vertical-align:baseline}`],\n  template: `<div>\n  <button mat-raised-button class=\"bh-file-upload\" (click)=\"fileInput.click()\" (keyup)=\"fileInput.click()\" color=\"primary\"\n    *ngIf=\"!fileName\" [disabled]=\"disableFileUploadButton()\">\n    <mat-icon>attach_file</mat-icon>\n    <span>Choose a file...</span>\n    <input #fileInput type=\"file\" (change)=\"handleSelect($event)\" style=\"display:none;\" />\n  </button>\n  <div *ngIf=\"fileName\">\n    <button mat-raised-button color=\"primary\" (click)=\"handleUpload()\">\n      <mat-icon>file_upload</mat-icon>\n      <span>{{fileName}}</span>\n    </button>\n    <button *ngIf=\"!isDone\" mat-icon-button color=\"warn\" (click)=\"cancel()\" class=\"bh-file-upload-cancel\">\n      <mat-icon>cancel</mat-icon>\n    </button>\n    <button *ngIf=\"isDone\" mat-icon-button (click)=\"cancel()\" class=\"bh-file-upload-done\">\n      <mat-icon>done</mat-icon>\n    </button>\n  </div>\n</div>\n`,\n})\nexport class NFileUploadComponent {\n  @ViewChild('fileInput') fileInput;\n  file: File;\n  fileName;\n  isDone: boolean;\n\n  @Input() uploadOptions;\n  @Input('disabled') disableButton;\n  @Output() onsuccess: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onerror: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(\n    private fileIOService: NFileIOService,\n    private _renderer: Renderer2) { }\n\n  /**\n   * Method executed when upload button is clicked.\n   */\n  handleUpload(): void {\n    this.isDone = false;\n    if (this.file && this.uploadOptions && this.uploadOptions.entityName && this.uploadOptions.metadata) {\n      this.fileIOService.upload({ files: this.file, entityName: this.uploadOptions.entityName, metadata: this.uploadOptions.metadata })\n        .then((res) => {\n          this.isDone = true;\n          this.onsuccess.emit(res);\n        })\n        .catch(err => this.onerror.emit(err));\n    } else {\n      this.onerror.emit(new Error('Upload options missing'));\n    }\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(fileInput: any): void {\n    if (fileInput.target.files && fileInput.target.files[0]) {\n      this.file = fileInput.target.files[0];\n      this.fileName = this.file.name;\n    }\n  }\n\n  /**\n   * Methods executed when cancel button is clicked.\n   * Clears files.\n   */\n  cancel(): void {\n    this.file = null;\n    this.fileName = null;\n    this.isDone = false;\n    // check if the file input is rendered before clearing it\n    if (this.fileInput) {\n      this._renderer.setProperty(this.fileInput, 'value', '');\n    }\n  }\n\n  disableFileUploadButton() {\n    if (typeof this.disableButton === 'boolean') {\n      return this.disableButton;\n    }\n    return this.disableButton === 'disabled' || this.disableButton === 'true' ? true : false;\n  }\n\n}\n",
    "import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'n-alert-dialog',\n  template: `\n<div class=\"alertContainer\" fxLayout=\"column\">\n  <h4 mat-dialog-title>{{titleContent}}</h4>\n  <span class=\"msgContainer\" >{{messageContent}}</span>\n  <button mat-raised-button (click)=\"dialogRef.close()\">Close</button>\n</div>\n`,\n  styles: [`.alertContainer{height:auto;width:auto}.msgContainer{margin-bottom:.5em}`]\n})\n\nexport class NAlertComponent {\n  static title = '';\n  static message = '';\n  messageContent;\n  titleContent;\n  constructor(public dialogRef?: MatDialogRef<NAlertComponent>) {\n    this.messageContent = NAlertComponent.message;\n    this.titleContent = NAlertComponent.title;\n  }\n\n}\n",
    "\nimport { Injectable } from '@angular/core';\nimport { NAlertComponent } from './n-alert.component';\nimport { MatDialog } from '@angular/material';\n\n@Injectable()\nexport class NAlertService {\n    constructor(private dialog: MatDialog) { }\n\n    alert(message, title, data?) {\n        NAlertComponent.message = message;\n        NAlertComponent.title = title;\n        this.dialog.open(NAlertComponent, data);\n    }\n\n}",
    "// import { MatSnackBar } from '@angular/material';\nimport { Component, OnInit, OnChanges, SimpleChanges, Input, EventEmitter, Output } from '@angular/core'\n\n@Component({\n    selector: 'n-toggleoptions',\n    template: `<mat-button-toggle-group #group=\"matButtonToggleGroup\" [vertical]=\"align == 'vertical'? true: false\">\n    <mat-button-toggle *ngFor=\"let option of toggleOptions; let i = index;\" [value]=\"option.value\" [disabled]=\"option.disabled || disabledIndex == i\" [checked]=\"option.checked || checkedIndex == i\" (click)=\"optionClicked(i)\" fxLayoutAlign=\"center center\">\n        <mat-icon *ngIf=\"option.icon\">{{option.icon}}</mat-icon>\n        <span *ngIf=\"!option.icon && option.value\">{{option.value}}</span>\n    </mat-button-toggle>\n</mat-button-toggle-group>`\n})\n\nexport class NToggleoptionsComponent implements OnInit, OnChanges {\n    // options = {icon: 'home', value: 'home', disabled: false, 'checked': false}\n    @Input('toggleOptions') toggleOptions = [];\n    @Input('align') align = 'horizontal';\n    @Input('disabledIndex') disabledIndex;\n    @Input('checkedIndex') checkedIndex;\n    @Output() indexChange = new EventEmitter();\n    @Output() valueChange = new EventEmitter();\n    // constructor(private snackbar: MatSnackBar) {\n    // }\n\n    ngOnInit() {\n        if (this.checkNumber(this.checkedIndex)) {\n            this.checkedIndex = Number(this.checkedIndex);\n        }\n\n        if (this.checkNumber(this.disabledIndex)) {\n            this.disabledIndex = Number(this.disabledIndex);\n        }\n\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['checkedIndex'] && this.checkNumber(this.checkedIndex)) {\n            this.checkedIndex = Number(this.checkedIndex);\n        } else if (changes['disabledIndex'] && this.checkNumber(this.disabledIndex)) {\n            this.disabledIndex = Number(this.disabledIndex);\n        }\n    }\n\n    optionClicked(index) {\n        if (this.toggleOptions && this.toggleOptions.length > 0) {\n            this.indexChange.emit(index);\n            if (this.toggleOptions[index] && this.toggleOptions[index].value) {\n                this.valueChange.emit(this.toggleOptions[index].value);\n            } else {\n                // this.snackbar.open('Invalid toggle button value', 'OK');\n            }\n        } else {\n            // this.snackbar.open('Invalid toggle options', 'OK');\n        }\n    }\n\n    private checkNumber(number) {\n        if (number !== undefined && number !== null) {\n            return Number.isNaN(Number(number));\n        }\n        return false;\n    }\n}\n",
    "/*DEFAULT GENERATED TEMPLATE. DO NOT CHANGE SELECTOR TEMPLATE_URL AND CLASS NAME*/\nimport { Component, AfterViewInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport * as signing from 'signature_pad';\n// import { MatSnackBar } from '@angular/material';\n/**\n* Model import Example :\n* import { HERO } from '../models/hero.model';\n*/\n\n/**\n * Service import Example :\n * import { HeroService } from '../services/hero/hero.service';\n */\n\n@Component({\n    selector: 'n-signature',\n    template: `<div fxFill fxLayout=\"row\" *ngIf=\"mode == 'click-fullscreen' && canvasMode !== 'fullscreen'\" class=\"signature-component-border\">\n    <div fxFlex=\"calc(100%-56px)\" fxLayout=\"column\">\n        <img *ngIf=\"imageDataValue\" [src]=\"imageDataValue\" fxFill/>\n    </div>\n    <div fxFlex=\"56px\" fxLayoutAlign=\" center\" class=\"signature-component-border\">\n        <button mat-icon-button (click)=\"showCanvas()\">\n            <mat-icon>mode_edit</mat-icon>\n        </button>\n    </div>\n</div>\n<div fxFill fxLayout=\"column\" class=\"signature-component-border\" [fxShow]=\"(mode == 'click-fullscreen' && canvasMode == 'fullscreen') || mode == 'responsive'\" [ngClass]=\"{'signature-canvas-fullscreen': classAbs}\">\n    <canvas #signaturecanvas></canvas>\n    <div fxFlex=\"56px\" fxLayoutAlign=\"center center\" class=\"signature-component-border\">\n        <button mat-icon-button (click)=\"undoCanvas()\">\n            <mat-icon>undo</mat-icon>\n        </button>\n        <button mat-icon-button (click)=\"clearCanvas()\">\n            <mat-icon>loop</mat-icon>\n        </button>\n        <button mat-icon-button (click)=\"saveCavas()\">\n            <mat-icon>save</mat-icon>\n        </button>\n        <button mat-icon-button (click)=\"canvasMode = 'responsive'; cancel()\">\n            <mat-icon>clear</mat-icon>\n        </button>\n    </div>\n</div>`,\n    styles: [`\n     :host { height: 100% !important; }\n     .signature-canvas-fullscreen {\n         position: absolute;\n         top: 0;\n         bottom: 0;\n         right: 0;\n         left: 0;\n     }\n     .signature-component-border {\n         border: 2px solid black;\n     }\n    `]\n})\n\nexport class NSignatureComponent implements AfterViewInit {\n\n    imageDataValue = '';\n    private signaturePad: any = '';\n\n    @ViewChild('signaturecanvas') signaturecanvas;\n    @ViewChild('canvasparent') canvasparent;\n\n    @Input('backgroundColor') backgroundColor;\n    @Input('dotSize') dotSize; // (float or function) Radius of a single dot.\n    @Input('minWidth') minWidth; // (float) Minimum width of a line. Defaults to 0.5.\n    @Input('maxWidth') maxWidth; // (float) Maximum width of a line. Defaults to 2.5.\n    @Input('throttle') throttle; // (integer) Draw the next point at most once per every x milliseconds. Set it to 0 to turn off throttling. Defaults to 16.\n    @Input('minDistance') minDistance; // (integer) Add the next point only if the previous one is farther than x pixels. Defaults to 5. \n    @Input('penColor') penColor; // (string) Color used to clear the background. Can be any color format accepted by context.fillStyle. Defaults to \"rgba(0,0,0,0)\" (transparent black). Use a non-transparent color e.g. \"rgb(255,255,255)\" (opaque white) if you'd like to save signatures as JPEG images.\n    @Input('velocityFilterWeight') velocityFilterWeight; // (float) Weight used to modify new velocity based on the previous velocity. Defaults to 0.7.\n    @Input('onBegin') onBegin; // (function) Callback when stroke begin.\n    @Input('onEnd') onEnd; // (function) Callback when stroke end.\n    @Input('mode') mode = 'responsive'; // 'click-fullscreen' or 'responsive'\n    canvasMode = 'responsive'; // 'responsive' or 'fullscreen'\n    private savedData;\n    private previousSavedData;\n    classAbs;\n\n    @Output() imageDataChange = new EventEmitter();\n    @Input()\n    get imageData() {\n        return this.imageDataValue;\n    }\n\n    set imageData(val) {\n        this.imageDataValue = val;\n        if (val || val === '' || this.isDataURL(val)) {\n            this.saveCavas(val);\n        }\n        this.imageDataChange.emit(this.imageDataValue);\n    }\n\n    ngAfterViewInit() {\n        if (this.mode === 'responsive') {\n            this.createCanvas();\n        }\n    }\n\n    createCanvas() {\n        this.fitToContainer(this.signaturecanvas.nativeElement);\n        this.signaturePad = new signing.default(this.signaturecanvas.nativeElement, this.assignOptions());\n    }\n\n    saveCavas(dataUrl?) {\n        if (this.signaturePad) {\n            if (this.signaturePad.isEmpty() || dataUrl === '') {\n                this.savedData = '';\n                this.signaturePad.clear();\n            } else if (this.isDataURL(dataUrl)) {\n                this.signaturePad.fromDataURL(dataUrl);\n                this.savedData = this.signaturePad.toData();\n            } else {\n                this.imageData = this.signaturePad.toDataURL();\n                if (this.mode === 'click-fullscreen') {\n                    this.savedData = this.signaturePad.toData();\n                    this.hideCanvas();\n                }\n            }\n        }\n    }\n\n    clearCanvas() {\n        this.signaturePad.clear();\n        // this.fitToContainer(this.signaturecanvas.nativeElement);\n    }\n\n    undoCanvas() {\n        const data = this.signaturePad.toData();\n\n        if (data) {\n            data.pop(); // remove the last dot or line\n            this.signaturePad.fromData(data);\n        }\n    }\n\n    showCanvas() {\n        this.classAbs = true;\n        this.canvasMode = 'fullscreen';\n        if (!this.signaturePad) {\n            this.createCanvas();\n\n        }\n        this.fitToContainer(this.signaturecanvas.nativeElement, document.body.clientHeight, document.body.clientWidth)\n        this.clearCanvas();\n        this.createCanvasFromData();\n    }\n\n    hideCanvas() {\n        this.canvasMode = 'responsive';\n    }\n\n    // cancel currently drawn\n    cancel() {\n        this.savedData = Object.assign([], this.previousSavedData);\n    }\n\n    createCanvasFromData() {\n        if (this.savedData) {\n            this.previousSavedData = Object.assign({}, this.savedData);\n            this.signaturePad.fromData(this.savedData);\n        }\n    }\n\n    private fitToContainer(element, height?, width?) {\n        element.style.width = '100%';\n        element.style.height = 'calc(100% - 56px)';\n        if (height && width) {\n            element.width = width;\n            element.height = height - 56;\n        } else {\n            element.width = element.offsetWidth;\n            element.height = element.offsetHeight;\n        }\n\n    }\n\n    private assignOptions() {\n        let options = {};\n        options['backgroundColor'] = this.checkIfValidValueAndRGB(this.backgroundColor, 'backgroundColor')\n        options['dotSize'] = this.checkIfValidValueAndNumber(this.dotSize, 'dotSize');\n        options['minWidth'] = this.checkIfValidValueAndNumber(this.minWidth, 'minWidth');\n        options['maxWidth'] = this.checkIfValidValueAndNumber(this.maxWidth, 'maxWidth');\n        options['throttle'] = this.checkIfValidValueAndNumber(this.throttle, 'throttle');\n        options['minDistance'] = this.checkIfValidValueAndNumber(this.minDistance, 'minDistance');\n        options['penColor'] = this.checkIfValidValueAndRGB(this.penColor, 'penColor')\n        options['velocityFilterWeight'] = this.checkIfValidValueAndNumber(this.velocityFilterWeight, 'velocityFilterWeight');\n        options = JSON.parse(JSON.stringify(options)); // removing all undefined fields\n        options['onBegin'] = this.checkIfValidValueAndFunction(this.onBegin, 'onBegin');\n        options['onEnd'] = this.checkIfValidValueAndFunction(this.onEnd, 'onEnd');\n        return options;\n    }\n\n    private checkIfValidValueAndNumber(num, name) {\n        if (this.checkIfValid(num) && this.checkNumber(num)) {\n            return num;\n        }\n        this.invalidToast(name, 'num');\n        return undefined;\n    }\n\n    private checkIfValidValueAndRGB(color, name) {\n        if (this.checkIfValid(color) && this.checkRGB(color)) {\n            return color;\n        }\n        this.invalidToast(name, 'rgb');\n        return undefined;\n    }\n\n    private checkIfValidValueAndFunction(fn, name) {\n        if (this.checkIfValid(fn) && this.checkIfValidFunction(fn)) {\n            return fn;\n        }\n        this.invalidToast(name, 'function format');\n        return undefined;\n    }\n\n    private checkIfValid(value) {\n        return (value !== undefined && value !== null) ? value : undefined;\n    }\n\n    private checkNumber(num) {\n        return !this.checkIsNan(Number(num)) ? Number(num) : undefined;\n    }\n\n    private checkIfValidFunction(fn) {\n        return typeof fn === 'function' ? fn : undefined;\n    }\n\n    private checkRGB(color) {\n        const matchColors1 = new RegExp(/rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/);\n        const matchColors2 = new RegExp(/rgb\\((\\d{1,3}),[ \\t]+(\\d{1,3}),(\\d{1,3})\\)/);\n        const matchColors3 = new RegExp(/rgb\\((\\d{1,3}),(\\d{1,3}),[ \\t]+(\\d{1,3})\\)/)\n        return matchColors1.test(color) || matchColors2.test(color) || matchColors3.test(color);\n    }\n\n    private checkIsNan(value) {\n        return Number.isNaN(value);\n    }\n\n    private invalidToast(optionName, optionType) {\n        switch (optionType) {\n            case 'num':\n                // this.snackbar.open(`Invalid ${optionName} (number or float) given, taking default value instead.`, 'OK');\n                break;\n            case 'rgb':\n                // this.snackbar.open(`Invalid ${optionName} format Eg: rgb(255, 255, 255)  given, taking default value instead.`, 'OK');\n                break;\n        }\n        return;\n    }\n\n    private isDataURL(s) {\n        if (s) {\n            const regex = /^\\s*data:([a-z]+\\/[a-z]+(;[a-z\\-]+\\=[a-z\\-]+)?)?(;base64)?,[a-z0-9\\!\\$\\&\\'\\,\\(\\)\\*\\+\\,\\;\\=\\-\\.\\_\\~\\:\\@\\/\\?\\%\\s]*\\s*$/i;\n            return !!s.match(regex);\n        } else {\n            return false;\n        }\n    }\n}\n",
    "import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\n\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { NeutrinosSeedServicesModule } from 'neutrinos-seed-services';\nimport { NSheetModule } from 'n-sheet';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material';\n\n\nimport { NCameraDirective } from './neutrinos-file/directives/n-camera.directive';\nimport { NDownloadDirective } from './neutrinos-file/directives/n-download.directive';\nimport { NScanDirective } from './neutrinos-file/directives/n-scanner.directive';\nimport { NVideoDirective } from './neutrinos-file/directives/n-video.directive';\nimport { NBarcodeDirective } from './neutrinos-file/directives/n-barcode.directive';\nimport { NTtsDirective } from './neutrinos-file/directives/n-tts.directive';\nimport { NFingerprintDirective } from './neutrinos-file/directives/n-fingerprint.directive';\nimport { NOcrDirective } from './neutrinos-file/directives/n-ocr.directive';\nimport { NShakeDirective } from './neutrinos-file/directives/n-shake.directive';\nimport { NFileUploadComponent } from './neutrinos-file/fileUpload/n-fileUpload.component';\nimport { NFileIOService } from './neutrinos-file/services/n-fileIO.service';\nimport { NAlertService } from './neutrinos-components/nAlertComponent/n-alert.service';\n\nimport { NAlertComponent } from './neutrinos-components/nAlertComponent/n-alert.component';\nimport { NToggleoptionsComponent } from './neutrinos-components/nToggleoptionsComponent/n-toggleoptions.component';\nimport { NSignatureComponent } from './neutrinos-components/nSignatureComponent/n-signature.component';\n\n\nconst EXPORTS: Type<any>[] = [\n  NCameraDirective,\n  NDownloadDirective,\n  NScanDirective,\n  NVideoDirective,\n  NBarcodeDirective,\n  NTtsDirective,\n  NFingerprintDirective,\n  NOcrDirective,\n  NShakeDirective,\n  NFileUploadComponent,\n  NAlertComponent,\n  NToggleoptionsComponent,\n  NSignatureComponent,\n];\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatButtonModule,\n    BrowserAnimationsModule,\n    MatButtonToggleModule,\n    NeutrinosSeedServicesModule,\n    NSheetModule,\n    FlexLayoutModule,\n  ],\n  declarations: [\n    EXPORTS,\n  ],\n  exports: [\n    EXPORTS,\n    NFileUploadComponent,\n    NeutrinosSeedServicesModule,\n    NSheetModule\n  ],\n  providers: [\n    NFileIOService,\n    NAlertService\n  ],\n  entryComponents: [\n    NAlertComponent\n  ]\n})\nexport class NeutrinosModule {\n\n\n}\n"
  ],
  "names": [
    "NFileIOService",
    "http",
    "_this",
    "this",
    "checkFileExist",
    "path",
    "fileName",
    "i",
    "callback",
    "window",
    "resolveLocalFileSystemURL",
    "length",
    "lastIndexOf",
    "isExist",
    "parseInt",
    "slice",
    "isNaN",
    "systemService",
    "NSystemService",
    "getInstance",
    "appProperties",
    "getVal",
    "prototype",
    "getFileInfo",
    "options",
    "dataModelURL",
    "getDataModelUrl",
    "metadata",
    "appName",
    "entityName",
    "key",
    "fileId",
    "get",
    "getFormData",
    "fileUri",
    "Promise",
    "resolve",
    "reject",
    "fileEntry",
    "file",
    "reader",
    "FileReader",
    "onerror",
    "evt",
    "onloadend",
    "formData",
    "FormData",
    "blob",
    "Blob",
    "Uint8Array",
    "result",
    "type",
    "append",
    "name",
    "readAsArrayBuffer",
    "error",
    "getPicture",
    "cameraOptions",
    "document",
    "addEventListener",
    "navigator",
    "camera",
    "imageUri",
    "then",
    "res",
    "catch",
    "err",
    "scanPicture",
    "scanOptions",
    "hasOwnProperty",
    "scan",
    "scanDoc",
    "sourceType",
    "doUpload",
    "getBarcode",
    "barcodeOptions",
    "cordova",
    "plugins",
    "barcodeScanner",
    "cancelled",
    "getVideo",
    "videoOptions",
    "device",
    "capture",
    "captureVideo",
    "mediaFiles",
    "fullPath",
    "getTts",
    "ttsOptions",
    "TTS",
    "speak",
    "reason",
    "getShake",
    "shakeOptions",
    "start",
    "shake",
    "startWatch",
    "sensitivity",
    "stopWatch",
    "getOcr",
    "ocrOptions",
    "imageData",
    "textocr",
    "recText",
    "uriOrBase",
    "returnType",
    "recognizedText",
    "message",
    "getFingerprint",
    "fingerprintOptions",
    "Fingerprint",
    "isAvailable",
    "show",
    "upload",
    "body",
    "files",
    "JSON",
    "stringify",
    "url",
    "getFileIOUrl",
    "temp_headers",
    "headers",
    "setHeaders",
    "Content-Type",
    "post",
    "subscribe",
    "download",
    "fileInfo",
    "contentType",
    "filename",
    "fileIOURL",
    "Accept",
    "responseType",
    "response",
    "saveFile",
    "resp",
    "data",
    "checkDevice",
    "storageLocation",
    "isAndroid",
    "externalRootDirectory",
    "documentsDirectory",
    "createDirectory",
    "saveToBrowser",
    "StyleMedia",
    "msSaveBlob",
    "downloadURL",
    "URL",
    "createObjectURL",
    "anchor",
    "createElement",
    "appendChild",
    "style",
    "display",
    "href",
    "click",
    "revokeObjectURL",
    "removeChild",
    "remove",
    "rootDirectory",
    "fileSystem",
    "getDirectory",
    "create",
    "dirEntry",
    "nativeURL",
    "newFileName",
    "getFile",
    "targetFile",
    "createWriter",
    "fileWriter",
    "onwriteend",
    "toURL",
    "write",
    "headerJSON",
    "HttpHeaders",
    "set",
    "Injectable",
    "HttpClient",
    "NCameraDirective",
    "fsv",
    "onsuccess",
    "EventEmitter",
    "methodToHandleMouseClickAction",
    "sucess",
    "emit",
    "uri",
    "Directive",
    "args",
    "selector",
    "Input",
    "Output",
    "HostListener",
    "NDownloadDirective",
    "downloadFile",
    "downloadOptions",
    "NScanDirective",
    "NVideoDirective",
    "NBarcodeDirective",
    "NTtsDirective",
    "NFingerprintDirective",
    "NOcrDirective",
    "NShakeDirective",
    "NFileUploadComponent",
    "fileIOService",
    "_renderer",
    "handleUpload",
    "isDone",
    "uploadOptions",
    "Error",
    "handleSelect",
    "fileInput",
    "target",
    "cancel",
    "setProperty",
    "disableFileUploadButton",
    "disableButton",
    "Component",
    "styles",
    "template",
    "Renderer2",
    "ViewChild",
    "NAlertComponent",
    "dialogRef",
    "messageContent",
    "titleContent",
    "title",
    "MatDialogRef",
    "NAlertService",
    "dialog",
    "alert",
    "open",
    "MatDialog",
    "NToggleoptionsComponent",
    "toggleOptions",
    "align",
    "indexChange",
    "valueChange",
    "ngOnInit",
    "checkNumber",
    "checkedIndex",
    "Number",
    "disabledIndex",
    "ngOnChanges",
    "changes",
    "optionClicked",
    "index",
    "value",
    "number",
    "undefined",
    "NSignatureComponent",
    "imageDataValue",
    "signaturePad",
    "mode",
    "canvasMode",
    "imageDataChange",
    "Object",
    "defineProperty",
    "val",
    "isDataURL",
    "saveCavas",
    "ngAfterViewInit",
    "createCanvas",
    "fitToContainer",
    "signaturecanvas",
    "nativeElement",
    "signing.default",
    "assignOptions",
    "dataUrl",
    "isEmpty",
    "savedData",
    "clear",
    "fromDataURL",
    "toData",
    "toDataURL",
    "hideCanvas",
    "clearCanvas",
    "undoCanvas",
    "pop",
    "fromData",
    "showCanvas",
    "classAbs",
    "clientHeight",
    "clientWidth",
    "createCanvasFromData",
    "assign",
    "previousSavedData",
    "element",
    "height",
    "width",
    "offsetWidth",
    "offsetHeight",
    "checkIfValidValueAndRGB",
    "backgroundColor",
    "checkIfValidValueAndNumber",
    "dotSize",
    "minWidth",
    "maxWidth",
    "throttle",
    "minDistance",
    "penColor",
    "velocityFilterWeight",
    "parse",
    "checkIfValidValueAndFunction",
    "onBegin",
    "onEnd",
    "num",
    "checkIfValid",
    "invalidToast",
    "color",
    "checkRGB",
    "fn",
    "checkIfValidFunction",
    "checkIsNan",
    "matchColors1",
    "RegExp",
    "matchColors2",
    "matchColors3",
    "test",
    "optionName",
    "optionType",
    "s",
    "match",
    "canvasparent",
    "EXPORTS",
    "NeutrinosModule",
    "NgModule",
    "imports",
    "HttpClientModule",
    "FormsModule",
    "CommonModule",
    "MatIconModule",
    "MatDialogModule",
    "MatButtonModule",
    "BrowserAnimationsModule",
    "MatButtonToggleModule",
    "NeutrinosSeedServicesModule",
    "NSheetModule",
    "FlexLayoutModule",
    "declarations",
    "exports",
    "providers",
    "entryComponents"
  ],
  "mappings": "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"
}
