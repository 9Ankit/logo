{"version":3,"file":"neutrinos-seed-services.umd.js.map","sources":["ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-system.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-sessionStorage.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-util.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-localStorage.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-token.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-pubSub.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-logout.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-HTTPLoader.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-notification.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-login.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-authGaurd.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-dataModel.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-HTTP.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-snackbar.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/snackbar/snack/snack.component.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/snackbar/snackbar/snackbar.component.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/neutrinos-seed-services.module.ts"],"sourcesContent":["// import { environment } from '../../environments/environment';\nimport { NUtility } from './n-util.service';\nimport { NLocalStorageService } from './n-localStorage.service';\nimport { Injectable } from '@angular/core';\nimport * as platform from 'platform';\n\n// @dynamic\nexport class NSystemService {\n  private static instance: NSystemService;\n\n  private _deviceType: string;\n  // private _deviceUUID;\n  uuid;\n  properties;\n  static envProperties;\n  static getInstance() {\n    if (!this.instance) {\n      this.instance = new NSystemService();\n    }\n    return this.instance;\n  }\n\n  private constructor() {\n    this._deviceType = this.checkDevice();\n  }\n\n  /**\n   * Seter and getter for the environments\n   */\n\n  // set environments(properties) {\n  //   console.log(properties);\n  //   NSystemService.envProperties = properties;\n  //   this.properties = this.getVal('properties');\n  // }\n\n  // get environments() {\n  //   return NSystemService.envProperties;\n  // }\n\n  /**\n   * Returna 'mobile' or 'browser' based on the platform\n   */\n  checkDevice(): string {\n    if (window['device'] && (window['device']['platform'] != 'browser' || window['device']['platform'] != 'Browser')) {\n      return 'mobile';\n    } else if (window['device'] && (window['device']['platform'] == 'browser' || window['device']['platform'] == 'Browser')) {\n      return 'cordova_browser';\n    } else {\n      return 'browser';\n    }\n  }\n\n\n  public get deviceType() {\n    return this._deviceType;\n  }\n\n\n\n  public getVal(key) {\n    if (!NSystemService.envProperties) {\n      NSystemService.envProperties = window['neutrinos']['environments'];\n      this.properties = NSystemService.envProperties.properties;\n    }\n\n    if (key == 'properties') {\n      if (NSystemService.envProperties) {\n        return NSystemService.envProperties.properties;\n      } else {\n        return undefined;\n      }\n    } else {\n      if (NSystemService.envProperties && NSystemService.envProperties.properties) {\n        return NSystemService.envProperties.properties[key];\n      } else {\n        return undefined;\n      }\n\n    }\n\n  }\n\n  public isAndroid() {\n    if (window['device'] && window['device']['platform'] == 'Android') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public isIOS() {\n    if (window['device'] && window['device']['platform'] == 'iOS') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public getAndroidVersion() {\n    if (this.isAndroid()) {\n      return window['device']['version'];\n    } else {\n      return '';\n    }\n  }\n\n  public getAuthUrl() {\n    // this.properties = this.getVal('properties');\n    return this.properties.baseUrl + this.properties.tenantName + '/auth/';\n  }\n  public getTenantUrl() {\n    return this.properties.baseUrl + this.properties.tenantName + '/';\n  }\n\n  public getAppUrl() {\n    return this.properties.baseUrl + this.properties.tenantName + '/proxy/' + this.properties.appName + '/';\n  }\n\n  public getProxyUrl() {\n    return this.properties.baseUrl + this.properties.tenantName + '/proxy/';\n  }\n\n  public getDataModelUrl() {\n    return this.properties.baseUrl + this.properties.tenantName + '/datamodel/' + this.properties.appDataSource + '/' + this.properties.appName + '/';\n  }\n\n  public getFileIOUrl() {\n    return this.properties.baseUrl + this.properties.tenantName + '/fileio/' +\n      this.properties.appDataSource + '/' + this.properties.appName + '/';\n  }\n\n  public getPlatformDetails(type) {\n    const pDetails = {\n      platform: platform.os.family,\n      platformVersion: platform.os.version,\n    };\n    if (type === 'browser') {\n      return Object.assign(pDetails, {\n        type: 'browser',\n        browser: platform.name,\n        browserVersion: platform.version,\n      });\n    } else if (type === 'mobile' || type === 'cordova_browser') {\n      return Object.assign(pDetails, {\n        type: 'mobile',\n        model: window['device'].model,\n        manufacturer: window['device'].manufacturer,\n        isVirtual: window['device'].isVirtual\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NSessionStorageService {\n  static sessionStorageCache: any = {};\n  constructor() {\n    NSessionStorageService.sessionStorageCache = sessionStorage;\n  }\n\n  getSessionStorage() {\n    return NSessionStorageService.sessionStorageCache;\n  }\n\n  setValue(key, value) {\n    NSessionStorageService.sessionStorageCache[key] = value;\n    sessionStorage.setItem(key, value)\n  }\n\n  getValue(key) {\n    if (!NSessionStorageService.sessionStorageCache[key]) {\n      return null;\n    }\n    try {\n      const obj = NSessionStorageService.sessionStorageCache[key];\n      return JSON.parse(obj);\n    } catch (error) {\n      return NSessionStorageService.sessionStorageCache[key];\n    }\n  }\n\n  remove(key) {\n    if (NSessionStorageService.sessionStorageCache.hasOwnProperty(key)) {\n      delete NSessionStorageService.sessionStorageCache[key];\n      sessionStorage.removeItem(key);\n    }\n  }\n\n  clearSessionStorage() {\n    NSessionStorageService.sessionStorageCache = {};\n    sessionStorage.clear();\n  }\n\n}\n","export class NUtility {\n  \n    constructor() { }\n  \n    generateUUID() {\n      return this.__s4() + this.__s4() + '-' + this.__s4() + '-' + this.__s4() + '-' + this.__s4() + '-' + this.__s4() + this.__s4() + this.__s4();\n    }\n  \n    __s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n  }","import { NSystemService } from './n-system.service';\nimport { Injectable } from '@angular/core';\nimport * as localforage from 'localforage';\nimport { NgForage, NgForageCache, NgForageConfig, CachedItem } from 'ngforage';\nimport { NUtility } from './n-util.service';\n\n@Injectable()\nexport class NLocalStorageService {\n\n  storageCache: any = {};\n  private _deviceUUID;\n  private nativeStorageI;\n  constructor(private ngfConfig?: NgForageConfig, private readonly ngf?: NgForage, private readonly ngfCache?: NgForageCache) {\n  }\n\n\n\n  initStorage() {\n    return new Promise((resolve, reject) => {\n      if (window['cordova']) {\n        this.initNgForage();\n      }\n      this.ngf.iterate((value, key, iteratonNumber) => {\n        this.storageCache[key] = value;\n      }).then(result => {\n        this.checkDeviceId();\n        return resolve('iteration is completed')\n      }).catch(error => {\n        return reject(error);\n      })\n    })\n  }\n\n  getStorage() {\n    return this.storageCache;\n  }\n\n\n  setValue(key, value) {\n    if (window['cordova']) {\n      this.initNgForage();\n    }\n    this.storageCache[key] = value;\n    return this.ngf.setItem(key, value).then(result => {\n      return result;\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  getValue(key): any | Promise<any> {\n    if (!this.storageCache[key]) {\n      return null;\n    } try {\n      const obj = this.storageCache[key]\n      return JSON.parse(obj);\n    } catch (error) {\n      return this.storageCache[key];\n    }\n  }\n\n  remove(key) {\n    delete this.storageCache[key];\n    if (window['cordova']) {\n      this.initNgForage();\n    }\n    this.ngf.removeItem(key).then(fulfilled => {\n      delete this.ngf[key];\n    }).catch(error => {\n      console.error('Could not remove', key);\n    })\n  }\n\n  clear() {\n    this.storageCache = {};\n    this.ngf.clear();\n  }\n\n  private pluginCheck() {\n    if (window['cordova'] && window['NativeStorage']) {\n      this.nativeStorageI = window['NativeStorage'];\n      // return true;\n    }\n    // this.initStorage();\n  }\n\n  private getItemNs(key) {\n    return new Promise((resolve, reject) => {\n      if (window['cordova'] && window['NativeStorage']) {\n        this.nativeStorageI.getItem(key, result => {\n          resolve(result);\n        }, error => {\n          reject(error);\n        })\n      }\n    })\n  }\n\n  private setItemNs(key, value) {\n    return new Promise((resolve, reject) => {\n      if (window['cordova'] && window['NativeStorage']) {\n        this.nativeStorageI.setItem(key, value, result => {\n          resolve(result);\n        }, error => {\n          reject(error);\n        })\n      }\n    })\n  }\n\n  private removeItemNs(key) {\n    return new Promise((resolve, reject) => {\n      if (window['cordova'] && window['NativeStorage']) {\n        this.nativeStorageI.remove(key, (result) => {\n          resolve(result);\n        }, (error) => {\n          reject(error);\n        });\n      }\n    })\n  }\n\n  private clearNs() {\n    return new Promise((resolve, reject) => {\n      if (window['cordova'] && window['NativeStorage']) {\n        this.nativeStorageI.clear(result => {\n          resolve(result);\n        }, error => {\n          reject(error);\n        })\n      }\n    })\n  }\n\n  private initNgForage() {\n    this.ngfConfig.configure({\n      name: 'MyApp',\n      driver: [\n        NgForageConfig.DRIVER_WEBSQL,\n      ]\n    });\n\n  }\n\n  private promiseReflect(promise) {\n    return promise.then(resolved => { return { v: resolved, status: 'resolved' } }, error => { return { e: error, status: 'rejected' } })\n  }\n\n  clearLocalStorage() {\n    this.remove('userObj');\n    this.remove('accessToken');\n    this.remove('refreshToken');\n    this.remove('registrationId');\n  }\n\n  /**\n   * Due to timing issues and circular dependency checkDeviceId is moved from NSystemService\n  */\n\n  checkDeviceId() {\n    if (NSystemService.getInstance().checkDevice() === 'browser') {\n      this._deviceUUID = this.getValue('uuid');\n\n      if (!this._deviceUUID) {\n        this._deviceUUID = new NUtility().generateUUID();\n        this.setValue('uuid', this._deviceUUID);\n      }\n    } else {\n      window['plugins'].uniqueDeviceID.get((uuid) => {\n        this._deviceUUID = uuid;\n        this.setValue('uuid', this._deviceUUID);\n      });\n    }\n    return this._deviceUUID;\n  }\n\n  public get deviceUUID() {\n    return this._deviceUUID;\n  }\n}\n","import { NSessionStorageService } from './n-sessionStorage.service';\nimport { NLocalStorageService } from './n-localStorage.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NTokenService {\n\n  nSessionStorage;\n  // nLocalStorageService: NLocalStorageService;\n\n  constructor(private nLocalStorageService: NLocalStorageService) {\n    this.nSessionStorage = new NSessionStorageService();\n    // this.nLocalStorageService = new NLocalStorageService();\n  }\n\n  updateTokens(tokensObj, isRemember?: Boolean) {\n    let userObj = this.decodeToken(tokensObj['accessToken'])\n    this.nSessionStorage.setValue('accessToken', tokensObj['accessToken']);\n    this.nSessionStorage.setValue('refreshToken', tokensObj['refreshToken']);\n    this.nSessionStorage.setValue('userObj', JSON.stringify(userObj));\n\n    if ((isRemember || this.nLocalStorageService.getValue('accessToken'))) {\n      this.nLocalStorageService.setValue('accessToken', tokensObj['accessToken']);\n      this.nLocalStorageService.setValue('refreshToken', tokensObj['refreshToken']);\n      this.nLocalStorageService.setValue('userObj', JSON.stringify(userObj));\n    }\n  }\n\n  updateSessionStorage() {\n    this.updateTokens(this.nLocalStorageService.getStorage(), true);\n  }\n\n  public urlBase64Decode(str: string): string {\n    let output = str.replace(/-/g, '+').replace(/_/g, '/');\n    switch (output.length % 4) {\n      case 0: { break; }\n      case 2: { output += '=='; break; }\n      case 3: { output += '='; break; }\n      default: {\n        throw 'Illegal base64url string!';\n      }\n    }\n    return this.b64DecodeUnicode(output);\n  }\n\n  // credits for decoder goes to https://github.com/atk\n  private b64decode(str: string): string {\n    let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    let output: string = '';\n\n    str = String(str).replace(/=+$/, '');\n\n    if (str.length % 4 == 1) {\n      throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n\n    for (\n      // initialize result and counters\n      let bc: number = 0, bs: any, buffer: any, idx: number = 0;\n      // get next character\n      buffer = str.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  }\n\n  // https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\n  private b64DecodeUnicode(str: any) {\n    return decodeURIComponent(Array.prototype.map.call(this.b64decode(str), (c: any) => {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n  }\n\n  public decodeToken(token: string): any {\n    let parts = token.split('.');\n\n    if (parts.length !== 3) {\n      throw new Error('JWT must have 3 parts');\n    }\n\n    let decoded = this.urlBase64Decode(parts[1]);\n    if (!decoded) {\n      throw new Error('Cannot decode the token');\n    }\n\n    return JSON.parse(decoded);\n  }\n\n  public getTokenExpirationDate(token: string): Date {\n    let decoded: any;\n    decoded = this.decodeToken(token);\n\n    if (!decoded.hasOwnProperty('exp')) {\n      return null;\n    }\n\n    let date = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    date.setUTCSeconds(decoded.exp);\n\n    return date;\n  }\n\n  public isTokenExpired(token: string, offsetSeconds?: number): boolean {\n    let date = this.getTokenExpirationDate(token);\n    offsetSeconds = offsetSeconds || 0;\n\n    if (date == null) {\n      return false;\n    }\n\n    // Token expired?\n    return !(date.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\n\nconst ServiceName: string = \"PubSub Service\";\n\n@Injectable()\nexport class NPubSubService {\n  private events = {};\n\n  constructor() { }\n\n  public $sub(event: string): Observable<any>;\n  public $sub(event: string, callback: (value: any) => void): Subscription;\n  public $sub(event: string, callback: (value: any) => void, error: (error: any) => void): Subscription;\n  public $sub(event: string, callback: (value: any) => void, error: (error: any) => void, complete: () => void): Subscription;\n  public $sub(event: string, callback?: (value: any) => void, error?: (error: any) => void, complete?: () => void) {\n      if (!event) {\n          throw new Error(`[${ServiceName}] => Subscription method must get event name.`);\n      }\n\n      if (this.events[event] === undefined) {\n          this.events[event] = new Subject<any>();\n      }\n\n      if (typeof callback !== 'function') {\n          return this.events[event].asObservable();\n      } else {\n          return this.events[event].asObservable().subscribe(callback, error, complete);\n      }\n  }\n\n  public $pub(event: string, eventObject?: any) {\n      if (!event) {\n          throw new Error(`[${ServiceName}] => Publish method must get event name.`);\n      } else if (!this.events[event]) {\n          return;\n      }\n      this.events[event].next(eventObject);\n  }\n}\n\nexport interface IPubSubService {\n  $pub(event: string, eventObject?: any);\n  $sub(event: string): Observable<any>;\n  $sub(event: string, callback: (value: any) => void): Subscription;\n  $sub(event: string, callback: (value: any) => void, error: (error: any) => void): Subscription;\n  $sub(event: string, callback: (value: any) => void, error: (error: any) => void, complete: () => void): Subscription;\n}\n\ninterface I$sub {\n  (event: string): Observable<any>;\n  (event: string, callback: (value: any) => void): Subscription;\n  (event: string, callback: (value: any) => void, error: (error: any) => void): Subscription;\n  (event: string, callback: (value: any) => void, error: (error: any) => void, complete: () => void): Subscription;\n}\n","import { Injectable } from '@angular/core';\nimport { NSessionStorageService } from './n-sessionStorage.service';\nimport { NLocalStorageService } from './n-localStorage.service';\n\n@Injectable()\nexport class NLogoutService {\n\n  nSessionStorage = new NSessionStorageService();\n  // nLocalStorageService = new NLocalStorageService();\n  constructor(private nLocalStorageService: NLocalStorageService) { }\n\n  logout() {\n    this.nSessionStorage.clearSessionStorage();\n    this.nLocalStorageService.clearLocalStorage();\n    return true;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n// import { NSnackbarService } from './n-snackbar.service';\nimport { NLogoutService } from './n-logout.service';\nimport { Observable } from \"rxjs/Observable\";\nimport { NSystemService } from './n-system.service';\nimport { NPubSubService } from './n-pubSub.service';\n// import { NSnackbarService } from './snackbar/service/snackbar.service';\n\n@Injectable()\nexport class NHTTPLoaderService {\n  public pendingRequests = 0;\n  public showLoading = false;\n  private _isHTTPRequestInProgress = new Subject<boolean>();\n  _isHTTPRequestInProgress$ = this._isHTTPRequestInProgress.asObservable();\n\n  constructor(private nLogoutService: NLogoutService, private nPubSubService: NPubSubService) {\n\n  }\n\n  isHTTPRequestInProgress(bool) {\n    if (bool) {\n      this.pendingRequests++;\n      if (!this.showLoading) {\n        this._isHTTPRequestInProgress.next(bool);\n      }\n      this.showLoading = true;\n    }\n    else {\n      this.pendingRequests--;\n      if (this.pendingRequests <= 0) {\n        if (this.showLoading) {\n          this._isHTTPRequestInProgress.next(bool);\n        }\n        this.showLoading = false;\n      }\n    }\n  }\n\n  alertError(error) {\n    if (error.status < 200 || error.status > 500) {\n      if (error.status === 0) {\n        this.nPubSubService.$pub('openSnackBar', 'Connectivity issue');\n      } else {\n        this.nPubSubService.$pub('openSnackBar', 'Response failure')\n      }\n    } else if (error.status === 401) {\n      this.nLogoutService.logout();\n      if (error.error) {\n        this.nPubSubService.$pub('openSnackBar', error.error)\n      } else {\n        this.nPubSubService.$pub('openSnackBar', error)\n      }\n    } else if (error.error) {\n      if (error.error instanceof Object) {\n        this.nPubSubService.$pub('openSnackBar', error.error.message)\n      } else {\n        this.nPubSubService.$pub('openSnackBar', error.error)\n      }\n    } else {\n      this.nPubSubService.$pub('openSnackBar', 'Response failure')\n    }\n  }\n\n}\n\n\n","import { Injectable, OnInit, OnDestroy } from '@angular/core';\nimport { NSystemService } from './n-system.service';\nimport { Observable } from 'rxjs/Observable';\ndeclare var PushNotification: any;\ndeclare var APNSPushNotification: any;\nimport { NLocalStorageService } from './n-localStorage.service';\nimport * as firebase from 'firebase';\nimport { NPubSubService } from './n-pubSub.service';\nimport { HttpClient } from '@angular/common/http';\nimport { NSessionStorageService } from './n-sessionStorage.service';\n// import { Router } from '@angular/router';\nimport { NHTTPLoaderService } from './n-HTTPLoader.service';\nimport { environment } from '../../environments/environment.prod';\n\n\n@Injectable()\nexport class NNotificationService {\n  // private static instance: NNotificationService;\n  private systemService: NSystemService = NSystemService.getInstance();\n  private firebaseSenderId: string;\n  private isNotificationEnabled: boolean;\n  private deviceType; string;\n  private resDetails;\n  private deviceUUID: string;\n  private possiblePushTypes: string[] = ['APNS','FCM'];\n  loginSubscribe;\n  sessionStorage: NSessionStorageService;\n  appName;\n  constructor(private localStorageService: NLocalStorageService, private pubSubService: NPubSubService,\n    private http: HttpClient, private bHttpLoader: NHTTPLoaderService) {\n    this.firebaseSenderId = this.systemService.getVal('firebaseSenderId');\n    this.isNotificationEnabled = this.systemService.getVal('isNotificationEnabled');\n    this.appName = this.systemService.getVal('appName');\n    this.deviceType = this.systemService.deviceType;\n    this.sessionStorage = new NSessionStorageService();\n    this.loginSubscribe = this.pubSubService.$sub('firebaseRegister', () => {\n      this.enableNotification();\n    })\n  }\n\n  ngOnInit() {\n  }\n\n\n  enableNotification() {\n    let pushType = this.getPushType(this.systemService.getVal('pushType'));\n    document.addEventListener('deviceready', event => {\n      if (this.isNotificationEnabled) {\n        if (this.deviceType && this.deviceType != 'browser') {\n          this.deviceType = this.systemService.deviceType;\n          this.checkPermission(pushType).then(res => {\n            if (res) {\n              this.initializeNotifications(pushType);\n            }\n          });\n        }\n      }\n    });\n    if (this.isNotificationEnabled && pushType !== 'APNS') {\n      if (this.deviceType && this.deviceType == 'browser' && window['Notification']) {\n        this.initialiseWebPush();\n      }\n    }\n  }\n\n  initialiseWebPush() {\n    const __this = this;\n    const messaging = firebase.messaging();\n\n    messaging.requestPermission()\n      .then(function () {\n        return messaging.getToken();\n      })\n      .then(function (token) {\n        if (token) {\n          __this.sendRegDetails(token);\n        }\n      })\n      .catch(function (err) {\n        __this.bHttpLoader.alertError(err);\n      });\n\n    messaging.onMessage(function (payload) {\n      if (payload['notification']) {\n        let notificationObj = payload['notification'];\n        let options = {\n          body: notificationObj.body,\n          icon: notificationObj.icon\n        }\n        // creating a native browser message\n        let notificationUI = new Notification(notificationObj.title, options);\n        notificationUI.onclick = function () {\n          window.focus(); // window is focused when the user clicks the notification using this\n        }\n      }\n    });\n  }\n\n  checkPermission(pushType?) {\n    // Android & iOS only\n    // Checks whether the push notification permission has been granted.\n    return new Promise((resolve) => {\n      pushType = this.getPushType(pushType);\n      if ((this.deviceType === 'Android' || this.deviceType === 'iOS') && (pushType === 'FCM' )) {\n        PushNotification.hasPermission(function (data) {\n          return resolve(data.isEnabled);\n        });\n      } else if (this.deviceType === 'iOS' && pushType === 'APNS') {\n         APNSPushNotification.hasPermission(function (data) {\n          return resolve(data.isEnabled);\n        });\n      } else {\n        return resolve(true);\n      }\n    });\n  }\n\n  initializeNotifications(pushType?) {\n    //pushType = pushType ? pushType : 'FCM';\n    pushType = this.getPushType(pushType);\n\n    let push;\n    // Default if for FCM\n    if (pushType === 'FCM') {\n      push = window['PushNotification'].init({\n        android: {\n          senderID: this.firebaseSenderId\n        },\n        ios: {\n          alert: \"true\",\n          badge: \"true\",\n          sound: \"true\",\n          senderID: this.firebaseSenderId\n        },\n      });\n    }\n    // New APNS plugin init\n    else if (pushType === 'APNS') {\n      push = window['APNSPushNotification'].init({\n        ios: {\n          alert: \"true\",\n          badge: \"true\",\n          sound: \"true\"\n        }\n      });\n    }\n    \n    push.on('registration', (data) => {\n      // data.registrationId\n      this.sendRegDetails(data.registrationId);\n    });\n\n    // ToDo Christy get call back function from app user to change what happens once a notification arrives\n    push.on('notification', (data) => {\n      window['cordova'].plugins.notification.local.schedule({\n        title: data.title,\n        text: data.message,\n        sound: data.sound,\n        at: new Date().getTime()\n      });\n    });\n\n    push.on('error', (e) => {\n      // e.message\n      console.error(e);\n    });\n  }\n\n  sendRegDetails(registrationId) {\n    this.localStorageService.setValue('registrationId', registrationId);\n    var url = this.systemService.getTenantUrl() + 'notification/' + this.systemService.getVal('appName') + '/register';\n    let pushType = this.getPushType(this.systemService.getVal('pushType'));\n    this.http.post(url, {\n      'key': this.sessionStorage.getValue('userObj')['userKey'],\n      'uuid': this.localStorageService.getValue('uuid'), \n      'fbregid': registrationId,\n      'pushType': pushType\n    }).subscribe(result => {\n      // this.pubSubService.$pub('FBRegComp');\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  getPushType (currPushType) {\n    let isValidPush = typeof currPushType !== 'undefined' && this.possiblePushTypes.includes(currPushType.toUpperCase());\n    let pushType = isValidPush ? currPushType.toUpperCase() : 'FCM';\n    return pushType;\n  }\n\n  ngOnDestroy() {\n    this.loginSubscribe.unSubscribe();\n  }\n  \n}\n","import { Injectable, EventEmitter, Output } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NSystemService } from './n-system.service';\nimport { NTokenService } from './n-token.service';\nimport { NPubSubService } from './n-pubSub.service';\nimport { NSessionStorageService } from './n-sessionStorage.service';\nimport { NLocalStorageService } from './n-localStorage.service';\nimport { NNotificationService } from './n-notification.service';\nimport 'rxjs/add/operator/map';\nimport { Observable } from \"rxjs/Observable\";\n\n\n@Injectable()\nexport class NLoginService {\n  loginUrl;\n  appProperties;\n  systemService;\n  nSessionStorage;\n  uuid;\n  details: any;\n\n  @Output() loginCompleted = new EventEmitter();\n  constructor(private http: HttpClient, private pubSubService: NPubSubService, private notificationService: NNotificationService,\n    private nLocalStorageService: NLocalStorageService, private nTokenService: NTokenService) {\n    this.systemService = NSystemService.getInstance();\n    // this.nTokenService = new NTokenService();\n    this.nSessionStorage = new NSessionStorageService();\n    // this.nLocalStorageService = new NLocalStorageService();\n  }\n\n\n  login(userName, password, isRemember?) {\n    this.appProperties = this.systemService.getVal('properties');\n    this.loginUrl = this.systemService.getAuthUrl() + this.appProperties.appName;\n    this.uuid = this.nLocalStorageService.getValue('uuid');\n    if (!this.uuid) {\n      this.uuid = this.nLocalStorageService.checkDeviceId();\n    }\n    this.details = {\n      username: userName,\n      password: password,\n    };\n    this.details.platformDetails = this.systemService.getPlatformDetails(this.systemService.checkDevice());\n    this.details.platformDetails['uuid'] = this.uuid;\n    return this.http.post(this.loginUrl, JSON.stringify(this.details)).map(result => {\n      const tokensObj = result;\n      if (tokensObj) {\n        this.nTokenService.updateTokens(tokensObj, isRemember);\n      }\n      // TODO chris array of supported pushes currently only support APNS and Firebase\n      if ((this.systemService.getVal('firebaseSenderId') != 'FIREBASE_SENDER_ID' && this.systemService.getVal('firebaseAuthKey') != 'FIREBASE_AUTH_KEY') \n           || (this.systemService.getVal('pushType') === 'APNS' && this.systemService.isIOS())) {\n        this.pubSubService.$pub('firebaseRegister');\n      }\n      this.pubSubService.$pub('loginComplete');\n      return (result);\n    }, error => {\n      return (error);\n    });\n  }\n\n  isLoggedIn() {\n    return this.nLocalStorageService.initStorage().then(result => {\n      if (this.nSessionStorage.getValue('accessToken') && this.nSessionStorage.getValue('refreshToken') &&\n        this.nSessionStorage.getValue('accessToken') != 'null' && this.nSessionStorage.getValue('refreshToken') != 'null') {\n        return true;\n      }\n      return false;\n    }).catch(error => {\n      return false;\n    });\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CanActivate } from '@angular/router';\nimport { NLoginService } from './n-login.service';\n\n@Injectable()\nexport class NAuthGuardService implements CanActivate {\n\n  constructor(private nLoginService: NLoginService, private router: Router) { }\n\n  canActivate() {\n    return this.nLoginService.isLoggedIn().then(result => {\n      if (result) {\n        return true;\n      } else {\n        this.router.navigate(['unauthorized']);\n        return false;\n      }\n    })\n\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Injectable } from '@angular/core';\nimport { NSystemService } from './n-system.service';\n\n@Injectable()\nexport class NDataModelService {\n  private systemService: NSystemService;\n  private dmUrl: string;\n  private invalidDataModelName: string = 'Invalid data model name.';\n  private invalidDataModelId: string = 'Invalid data model id.';\n  private invalidDataModelObj: string = 'Invalid data model object.';\n  private dmDs;\n  constructor(private http: HttpClient) {\n    this.systemService = NSystemService.getInstance();\n  }\n\n  // GET /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\n  /**\n   *\n   * @param dataModelName\n   * @param filter The filter query parameter allows to specify conditions on the documents to return.\n   * The filter qparam value is any mongodb queryâ¦ Defaults to {}\n   * @param keys Projections to be applited on mongo db.\n   * @param sort sort to be applied on the query results. Defaults to {}\n   * @param pagenumber Page number for paginated queries. Defaults to 1\n   * @param pagesize Size of each page to be returned. Defaults to 100.\n   */\n  get(dataModelName, filter?, keys?, sort?, pagenumber?, pagesize?): Observable<any> {\n    if (dataModelName) {\n      // let modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\n      let modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\n      if (this.checkIfValid(filter) || this.checkIfValid(keys) || this.checkIfValid(sort) ||\n        this.checkIfValid(pagenumber) || this.checkIfValid(pagesize)) {\n        let queryString = `${this.toQueryString({\n          'filter': filter,\n          'keys': keys,\n          'sort': sort,\n          'pagenumber': pagenumber,\n          'pagesize': pagesize\n        })}`;\n        if (queryString === '') {\n          queryString += '?filter={}';\n        } else {\n          queryString = '?'.concat(queryString);\n        }\n        modelNameUrl += queryString;\n      }\n      return this.http.get(modelNameUrl).map((value, index) => {\n        return value;\n      }).catch(error => {\n        return Observable.throw(error);\n      });\n    } else {\n      return Observable.throw(new Error(`Could not get ${dataModelName}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  // PUT /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\n  /**\n   *\n   * @param dataModelName Data model name of the app\n   * @param dataModelObj Data Model object which is to be inserted\n   */\n  put(dataModelName, dataModelObj): Observable<any> {\n    if (dataModelName) {\n      if (dataModelObj) {\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\n        const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\n        return this.http.put(modelNameUrl, dataModelObj).map((value, index) => {\n          return value;\n        }).catch(error => {\n          return Observable.throw(error);\n        })\n      } else {\n        return Observable.throw(new Error(`Could not put ${dataModelObj} in ${dataModelName}. ${this.invalidDataModelObj}`));\n      }\n    } else {\n      return Observable.throw(new Error(`Could not put ${dataModelObj} in ${dataModelName}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  // DELETE /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\n  /**\n   *\n   * @param dataModelName\n   * @param filter\n   */\n  delete(dataModelName, filter): Observable<any> {\n    let modelNameUrl;\n    if (dataModelName) {\n      // modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\n      modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\n\n      if (this.checkIfValid(filter) && filter != '') {\n        modelNameUrl += `?filter=${filter}`;\n      } else {\n        modelNameUrl += '?filter={}';\n      }\n      return this.http.delete(modelNameUrl).map((value, index) => {\n        return value;\n      }).catch(error => {\n        return Observable.throw(error);\n      })\n    } else {\n      return Observable.throw(new Error(`Could not delete ${dataModelName}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  // PATCH /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\n  /**\n   *\n   * @param dataModelName Data model name which is to be updated\n   * @param dataModelObj New data model object\n   */\n  update(dataModelName, updateObject): Observable<any> {\n    if (dataModelName && updateObject) {\n      // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\n      const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\n      return this.http.patch(modelNameUrl, updateObject).map((value, index) => {\n        return value;\n      }).catch(error => {\n        return Observable.throw(error);\n      })\n    } else {\n      return Observable.throw(new Error(`Could not update ${dataModelName}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  // GET /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}/{dataModelId}\n  /**\n   *\n   * @param dataModelName Data model name which is to be updated\n   * @param dataModelId Data model id which is to be updated\n   */\n  getById(dataModelName, dataModelId): Observable<any> {\n    if (dataModelName) {\n      if (dataModelId) {\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}/${dataModelId}`;\n        const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName + \"/\" + dataModelId;\n        return this.http.get(modelNameUrl).map((value, index) => {\n          return value;\n        }).catch(error => {\n          return Observable.throw(error);\n        })\n      } else {\n        Observable.throw(new Error(`Could not get ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelId}`));\n      }\n    } else {\n      Observable.throw(new Error(`Could not get ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  // DELETE /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}/{dataModelId}\n  /**\n   *\n   * @param dataModelName Data model name which is to be deleted\n   * @param dataModelId Data model id which is to be deleted\n   */\n  deleteById(dataModelName, dataModelId) {\n    if (dataModelName) {\n      if (dataModelId) {\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}/${dataModelId}`;\n        const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName + \"/\" + dataModelId;\n        return this.http.delete(modelNameUrl).map((value, index) => {\n          return value;\n        }).catch(error => {\n          return Observable.throw(error);\n        })\n      } else {\n        Observable.throw(new Error(`Could not get ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelId}`));\n      }\n    } else {\n      return Observable.throw(new Error(`Could not delete ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  //PATCH /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}/{dataModelId}\n  /**\n   *\n   * @param dataModelName Data model name which is to be update\n   * @param dataModelId Data model id which is to be updated\n   * @param dataModelObj Data Model object which is to be inserted\n   */\n  updateById(dataModelName, dataModelId, dataModelObj) {\n    if (dataModelName) {\n      if (dataModelId) {\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}/${dataModelId}`;\n        const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName + \"/\" + dataModelId;\n        var dmObj = Object.assign({}, dataModelObj);\n        delete dmObj['_id'];\n        return this.http.patch(modelNameUrl, dmObj).map((value, index) => {\n          return value;\n        }).catch(error => {\n          return Observable.throw(error);\n        })\n      } else {\n        Observable.throw(new Error(`Could not get ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelId}`));\n      }\n    } else {\n      return Observable.throw(new Error(`Could not delete ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  private toQueryString(obj) {\n    const parts = [];\n    for (const i in obj) {\n      if (obj.hasOwnProperty(i) && this.checkIfValid(obj[i])) {\n        parts.push((i) + '=' + JSON.stringify(obj[i]));\n      }\n    }\n    return parts.join('&');\n  }\n\n  private checkIfValid(value: any) {\n    if (value === undefined || value == null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  private getDataSourceURL(dataModelName) {\n    if (!this.dmDs) {\n      this.dmDs = window['neutrinos']['dataSource'];\n    }\n    const dsDm = this.dmDs[dataModelName];\n    const properties = this.systemService.properties;\n    if (dsDm) {\n      return properties.baseUrl + properties.tenantName + '/datamodel/' + dsDm + '/' + properties.appName + '/';\n    } else {\n      return this.systemService.getDataModelUrl();\n    }\n  }\n\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpHeaders,\n  HttpResponse,\n  HttpErrorResponse,\n  HttpClient\n} from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs/Rx';\nimport { NHTTPLoaderService } from './n-HTTPLoader.service';\nimport { NSystemService } from './n-system.service';\nimport { NSessionStorageService } from './n-sessionStorage.service';\nimport { NLocalStorageService } from './n-localStorage.service';\nimport { NTokenService } from './n-token.service';\nimport { NPubSubService } from './n-pubSub.service';\n\n@Injectable()\nexport class NHttpService {\n  timeout = 90000;\n  systemService;\n  nSessionStorage;\n  appProperties;\n  isRefreshingToken = false;\n  nPubSubService;\n  tokenSubject: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n\n  constructor(private nHTTPLoader: NHTTPLoaderService, private inj: Injector,\n    private nLocalStorageService: NLocalStorageService, private nTokenService: NTokenService) {\n    this.systemService = NSystemService.getInstance();\n    this.nSessionStorage = new NSessionStorageService();\n    this.appProperties = this.systemService.getVal('properties');\n    this.nPubSubService = new NPubSubService();\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.requestInterceptor();\n\n    // Pass on the cloned request instead of the original request.\n    return next.handle(this.requestOptions(req))\n      .timeout(this.timeout)\n      .catch(error => this.onCatch(error, req, next))\n      .finally(() => {\n        this.onFinally();\n      });\n  };\n\n  updateToken(error: HttpErrorResponse, req: HttpRequest<any>, next: HttpHandler): any {\n    if (this.appProperties.appAuthenticationStrategy === 'activeDirectory' ||\n      this.appProperties.appAuthenticationStrategy === 'localAuth') {\n      if (!this.isRefreshingToken) {\n        this.isRefreshingToken = true;\n\n        // Reset here so that the following requests wait until the token\n        // comes back from the refreshToken call.\n        this.tokenSubject.next(null);\n\n        return this.refreshToken()\n          .switchMap((tokensObj: Object) => {\n            if (tokensObj) {\n              this.nTokenService.updateTokens(tokensObj);\n              const newToken = tokensObj['accessToken'];\n              this.tokenSubject.next(newToken);\n              return next.handle(this.requestOptions(req));\n            }\n            return Observable.throw(new Error('Can\\'t refresh the token'));\n          })\n          .catch(err => this.onCatchError(err))\n          .finally(() => this.isRefreshingToken = false)\n      } else {\n        return this.tokenSubject\n          .filter(token => token != null)\n          .take(1)\n          .switchMap(token => next.handle(this.requestOptions(req)));\n      }\n    } else {\n      return this.onCatchError(error);\n    }\n  }\n\n  refreshToken() {\n    const http = this.inj.get(HttpClient);\n    const appProperties = this.systemService.getVal('properties');\n    const refreshUrl = this.systemService.getAuthUrl() + appProperties.appName + '/refresh';\n    const body = {\n      'platformDetails': this.systemService.getPlatformDetails(this.systemService.checkDevice()),\n      'userKey': this.nSessionStorage.getValue('userObj')['userKey'],\n      'refreshToken': this.nSessionStorage.getValue('refreshToken')\n    };\n    body.platformDetails['uuid'] = this.nLocalStorageService.getValue('uuid');\n    return http.post(refreshUrl, body);\n  }\n\n\n  /**\n   * Request options.\n   * @param options\n   * @returns HttpRequest\n   */\n  private requestOptions(req?: HttpRequest<any>) {\n    let headers = req.headers;\n    if (req.headers == null) {\n      headers = new HttpHeaders();\n    }\n    req = req.clone({\n      url: this.getFullUrl(req.url),\n      headers: headers\n    });\n    const baseUrl = NSystemService.getInstance().getVal('baseUrl');\n    const isArt = (baseUrl !== '' && req.url.includes(baseUrl));\n    return  isArt ? this.addDefaultHeaders(req) : req;\n  }\n\n\n  /**\n  * Default options.\n  * @param options\n  * @returns HttpHeadedrs\n  */\n  private addDefaultHeaders(req: any) {\n    /**\n     * TODO: Add all default Headers over here\n     */\n    if (!req.headers.has('Access-Control-Allow-Origin')) {\n      req.headers = req.headers.set('Access-Control-Allow-Origin', '*');\n    }\n\n    if (!req.headers.has('Content-Type')) {\n      req.headers = req.headers.set('Content-Type', 'application/json');\n    } else if (req.headers.has('Content-Type') && (req.headers.get('Content-Type') === 'no-content')) {\n      req.headers = req.headers.delete('Content-Type');\n    }\n\n    if (!req.headers.has('Accept')) {\n      req.headers = req.headers.set('Accept', 'application/json');\n    }\n\n    if (!req.headers.has('Authorization')) {\n      this.appProperties = this.systemService.getVal('properties');\n      if (this.appProperties && this.appProperties.appAuthenticationStrategy === 'basicAuth') {\n        let username, password;\n        if (this.appProperties.basicAuthUser && this.appProperties.basicAuthPassword) {\n          username = this.appProperties.basicAuthUser;\n          password = this.appProperties.basicAuthPassword;\n        }\n        else {\n          username = \"bhive-art-proxyuser\";\n          password = \"password\";\n          console.warn(\"Authentication strategy: Basic Auth. basicAuthUser and basicAuthPassword are not configured in environment. Setting default values.\");\n        }\n        req.headers = req.headers.set('Authorization', 'Basic ' + btoa(username + \":\" + password));\n      } else if (this.appProperties && (this.appProperties.appAuthenticationStrategy === 'activeDirectory' ||\n        this.appProperties.appAuthenticationStrategy === 'localAuth')) {\n        if (this.nSessionStorage.getValue('accessToken')) {\n          req.headers = req.headers.set('Authorization', 'Bearer ' + this.nSessionStorage.getValue('accessToken'));\n        }\n      }\n    }\n    return req;\n  }\n\n  /**\n   * Build API url.\n   * @param url\n   * @returns string\n   */\n  private getFullUrl(url: string): string {\n    // return full URL to API here\n    return url;\n  }\n\n  /**\n   * Request interceptor.\n   */\n  private requestInterceptor(): void {\n    this.nHTTPLoader.isHTTPRequestInProgress(true);\n  }\n\n  /**\n   * Response interceptor.\n   */\n  private responseInterceptor(): void {\n    this.nHTTPLoader.isHTTPRequestInProgress(false);\n  }\n\n  /**\n    * Error handler.\n    * @param error\n    * @param caught\n    * @returns ErrorObservable\n    */\n  private onCatch(error: HttpErrorResponse, req: HttpRequest<any>, next: HttpHandler): Observable<any> {\n    if (error instanceof HttpErrorResponse) {\n      if ((<HttpErrorResponse>error).status === 403 && (<HttpErrorResponse>error).error.message === 'jwt expired') {\n        return this.updateToken(error, req, next);\n      } else {\n        return this.onSubscribeError(error);\n      }\n    } else {\n      return this.onSubscribeError(error);\n    }\n  }\n\n  /**\n   * onSubscribeError\n   * @param error\n   */\n  private onSubscribeError(err: HttpErrorResponse): Observable<any> {\n    this.nHTTPLoader.alertError(err);\n    return this.onCatchError(err);\n  }\n  /**\n   * onFinally\n   */\n  private onFinally(): void {\n    this.responseInterceptor();\n  }\n\n  private onCatchError(error: HttpErrorResponse): Observable<any> {\n    return Observable.throw(error);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n// import { MatSnackBar } from '@angular/material';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { NSystemService } from './n-system.service';\nimport { NPubSubService } from './n-pubSub.service';\n\n\n@Injectable()\nexport class NSnackbarService {\n  snackBarListner;\n  private snackService = new Subject<any>();\n  constructor(private nPubSubService: NPubSubService) {\n    if (NSystemService.getInstance().getVal('useDefaultExceptionUI')) {\n      this.snackBarListner = this.nPubSubService.$sub('openSnackBar', (msg) => {\n        this.openSnackBar(msg);\n      })\n    }\n  }\n\n  get() {\n    return this.snackService.asObservable();\n  }\n\n\n\n  add(data: {\n    msg: string, timeout?: number, background?: string, color?: string, customClass?: any,\n    action?: { text: string, onClick?: Function, color?: string }, onAdd?: Function, onRemove?: Function\n  }) {\n    this.snackService.next({\n      action: 'add',\n      data: data\n    });\n  }\n\n  remove(id: string) {\n    this.snackService.next({ action: 'remove', id: id });\n  }\n\n  clear() {\n    this.snackService.next({ action: 'clear' });\n  }\n\n  openSnackBar(message, timeout?, ) {\n    this.add({\n      msg: message,\n      timeout: timeout || 5000,\n      action: {\n        text: 'Close',\n        onClick: (snack) => {\n         \n        },\n      },\n      onAdd: (snack) => {\n      },\n      onRemove: (snack) => {\n      }\n    });\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'n-snack',\n  template: `\n     <div class=\"snack\" [ngStyle]=\"{background: background ? background : '#323232' , color: color ? color : '#fff'}\" [ngClass]=\" ['snackbar-layout', 'customClass' ]\">\n          <ng-content></ng-content>\n       </div> \n  `,\n  styles: [`.snack-action{cursor:pointer;color:#2196f3;font-weight:700}.container{display:flex;flex-direction:row;flex-wrap:wrap}.child{width:60%;flex:1 0;margin-right:.5em}.snackbars.bottom-center{align-items:middle;left:50%;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);bottom:1px;align-items:center}.snackbars{position:fixed;z-index:99999;max-width:100%;word-wrap:break-word;display:inline;font-family:Roboto;letter-spacing:1px}.snack{padding:1em;border-radius:.3em;max-height:50vh;overflow:auto}`]\n})\nexport class SnackComponent {\n  @Input() background;\n  @Input() color;\n  @Input() customClass;\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NSnackbarService } from '../../n-snackbar.service';\n\n@Component({\n  selector: 'n-snackbar',\n  template: `\n      <div class=\"snackbars\" [ngClass]=\"position || 'bottom-center'\">\n          <n-snack   *ngFor=\"let snackbar of snacks\" [background]=\"snackbar.background || background\"\n                        [customClass]=\"snackbar.customClass || customClass\"\n                        [color]=\"snackbar.color || color || calcTextColor(snackbar.background || background)\">\n              <div class=\"container\">\n              <div class=\"snack-text child\" >\n                  {{snackbar.msg}}\n              </div>\n              <div *ngIf=\"snackbar.action.text\" class=\"snack-action\" (click)=\"snackbar.action.onClick()\"\n                   [ngStyle]=\"{color: snackbar.action.color || accent}\">\n                  {{snackbar.action.text}}\n              </div>\n              </div>\n          </n-snack>\n      </div>\n  `,\n  styles: [`.snack-action{cursor:pointer;color:#2196f3;font-weight:700}.container{display:flex;flex-direction:row;flex-wrap:wrap}.child{width:60%;flex:1 0;margin-right:.5em}.snackbars.bottom-center{align-items:middle;left:50%;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);bottom:1px;align-items:center}.snackbars{position:fixed;z-index:99999;max-width:100%;word-wrap:break-word;display:inline;font-family:Roboto;letter-spacing:1px}.snack{padding:1em;border-radius:.3em;max-height:50vh;overflow:auto}`]\n})\nexport class SnackbarComponent {\n  @Input() position: 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';\n  @Input() max: number = 1;\n  @Input() background: string;\n  @Input() accent: string;\n  @Input() color: string;\n  @Input() customClass: any;\n  @Input() timeout: number;\n\n  @Output() public onAdd: EventEmitter<any> = new EventEmitter<any>();\n  @Output() public onRemove: EventEmitter<any> = new EventEmitter<any>();\n  @Output() public onClear: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  snacks: Array<{\n    id: string, msg: string, timeout?: number, color?: string, background?: string, customClass?: any, action?: {\n      text: string, onClick?: Function, color?: string\n    }, onAdd?: Function, onRemove?: Function, timeoutObj?: any\n  }> = [];\n\n  constructor(private snackbarService: NSnackbarService) {\n    this.snackbarService.get()\n      .subscribe(snack => {\n        if (snack.action === 'add') {\n          this.add(snack.data);\n        } else if (snack.action === 'remove') {\n          this.remove(snack.id);\n        } else if (snack.action === 'clear') {\n          this.clear();\n        }\n      });\n  }\n\n  add(snack) {\n    let timeout;\n    const id = this.uuid();\n\n    if (this.max && this.max > 0 && this.snacks.length === this.max) {\n      this.remove(this.snacks[0].id);\n    }\n\n    if (snack.timeout || this.timeout) {\n      timeout = setTimeout(() => {\n        this.remove(id);\n      }, snack.timeout || this.timeout)\n    }\n\n    const data = Object.assign({ id: id, timeoutObj: timeout }, snack);\n\n    if (snack.action) {\n      const that = this;\n      const fcn = snack.action.onClick || new Function();\n      snack.action.onClick = () => {\n        fcn(data);\n        that.remove(id);\n      };\n    }\n\n    if (snack.onAdd) {\n      snack.onAdd(data);\n    }\n\n    if (this.onAdd) {\n      this.onAdd.emit(data);\n    }\n\n    this.snacks.push(data);\n  }\n\n  remove(id) {\n    const snack = this.snacks.find(obj => obj.id === id);\n\n    if (snack) {\n      if (snack.onRemove) {\n        snack.onRemove(snack);\n      }\n\n      if (this.onRemove) {\n        this.onRemove.emit(snack);\n      }\n\n      if (snack.timeoutObj) {\n        clearTimeout(snack.timeoutObj);\n      }\n    }\n\n    this.snacks = this.snacks.filter(obj => obj.id !== id);\n  }\n\n  clear() {\n    // this.snacks.forEach(snack => {\n    //   this.remove(snack.id);\n    // });\n\n    this.snacks = [];\n\n    if (this.onClear) {\n      this.onClear.emit(true);\n    }\n  }\n\n  uuid() {\n    // tslint:disable:no-bitwise\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n    // tslint:enable:no-bitwise\n  }\n\n  calcTextColor(background) {\n    if (!background) {\n      return null;\n    }\n\n    function hexToRgb(hex) {\n      const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n      hex = hex.replace(shorthandRegex, (m, r, g, b) => {\n        return r + r + g + g + b + b;\n      });\n\n      const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n      return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n      } : null;\n    }\n\n    const rgb = hexToRgb(background);\n    if (!rgb) {\n      return null;\n    }\n\n    const color = [rgb.r / 255, rgb.g / 255, rgb.b / 255];\n\n    for (let i = 0; i < color.length; ++i) {\n      if (color[i] <= 0.03928) {\n        color[i] = color[i] / 12.92;\n      } else {\n        color[i] = Math.pow((color[i] + 0.055) / 1.055, 2.4);\n      }\n    }\n\n    const l = 0.2126 * color[0] + 0.7152 * color[1] + 0.0722 * color[2];\n\n    if (l > 0.179) {\n      return '#000';\n    } else {\n      return '#fff';\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders, APP_INITIALIZER } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { BrowserModule } from '@angular/platform-browser';\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n// import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// import { MatSnackBar } from \"@angular/material\";\nimport { NAuthGuardService } from './n-authGaurd.service'\nimport { NDataModelService } from './n-dataModel.service';\n// import { NDataSourceService } from './n-dataSource.service';\nimport { NHttpService } from './n-HTTP.service';\nimport { NHTTPLoaderService } from './n-HTTPLoader.service';\nimport { NLocalStorageService } from './n-localStorage.service';\nimport { NLoginService } from './n-login.service';\nimport { NLogoutService } from './n-logout.service';\nimport { NNotificationService } from './n-notification.service';\nimport { NSnackbarService } from './n-snackbar.service';\nimport { NSystemService } from './n-system.service';\nimport { NPubSubService } from './n-pubSub.service';\nimport { NSessionStorageService } from './n-sessionStorage.service'\nimport { NTokenService } from './n-token.service';\nimport { HttpClientModule } from '@angular/common/http';\n// import { RouterModule } from '@angular/router';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { NgForageModule } from 'ngforage';\n\nimport { SnackComponent } from './snackbar/snack/snack.component';\nimport { SnackbarComponent } from './snackbar/snackbar/snackbar.component';\n// import {SafeHtmlPipe} from './snackbar/pipe/safe-html.pipe';\n\n\n// export function updateEnvProperties(env) {\n//   console.log(env);\n//   NSystemService.getInstance().environments = env;\n// }\n\nexport function startupServiceFactory(startupService: NLocalStorageService) {\n  const res = () => {\n    // console.log('module before initstorage call');\n    return startupService.initStorage();\n\n  }\n  return res;\n}\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule,\n    HttpModule,\n    NgForageModule.forRoot()\n    // BrowserModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: NHttpService,\n      multi: true\n    },\n    {\n      // Provider for APP_INITIALIZER\n      provide: APP_INITIALIZER,\n      useFactory: startupServiceFactory,\n      deps: [NLocalStorageService],\n      multi: true\n    },\n    NAuthGuardService,\n    NDataModelService,\n    // NDataSourceService,\n    NHttpService,\n    NHTTPLoaderService,\n    NLocalStorageService,\n    NLoginService,\n    NLogoutService,\n    NNotificationService,\n    NSnackbarService,\n    NPubSubService,\n    //     NSystemService,\n    NSessionStorageService,\n    NTokenService\n  ],\n  declarations: [\n    SnackComponent,\n    SnackbarComponent\n  ],\n  exports: [\n    SnackComponent,\n    SnackbarComponent\n  ]\n\n})\nexport class NeutrinosSeedServicesModule {\n\n}\n"],"names":["platform.os","platform.name","platform.version","Injectable","NgForageConfig","NgForage","NgForageCache","Subject","http","firebase.messaging","HttpClient","EventEmitter","Output","router","Router","Observable","BehaviorSubject","HttpHeaders","HttpErrorResponse","Injector","Component","Input","NgModule","CommonModule","HttpClientModule","RouterModule","HttpModule","NgForageModule","HTTP_INTERCEPTORS","APP_INITIALIZER"],"mappings":"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"}
