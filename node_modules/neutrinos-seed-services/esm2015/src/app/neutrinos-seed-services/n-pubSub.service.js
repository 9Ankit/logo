/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs/Subject';
const /** @type {?} */ ServiceName = "PubSub Service";
export class NPubSubService {
    constructor() {
        this.events = {};
    }
    /**
     * @param {?} event
     * @param {?=} callback
     * @param {?=} error
     * @param {?=} complete
     * @return {?}
     */
    $sub(event, callback, error, complete) {
        if (!event) {
            throw new Error(`[${ServiceName}] => Subscription method must get event name.`);
        }
        if (this.events[event] === undefined) {
            this.events[event] = new Subject();
        }
        if (typeof callback !== 'function') {
            return this.events[event].asObservable();
        }
        else {
            return this.events[event].asObservable().subscribe(callback, error, complete);
        }
    }
    /**
     * @param {?} event
     * @param {?=} eventObject
     * @return {?}
     */
    $pub(event, eventObject) {
        if (!event) {
            throw new Error(`[${ServiceName}] => Publish method must get event name.`);
        }
        else if (!this.events[event]) {
            return;
        }
        this.events[event].next(eventObject);
    }
}
NPubSubService.decorators = [
    { type: Injectable },
];
/** @nocollapse */
NPubSubService.ctorParameters = () => [];
function NPubSubService_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    NPubSubService.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    NPubSubService.ctorParameters;
    /** @type {?} */
    NPubSubService.prototype.events;
}
/**
 * @record
 */
export function IPubSubService() { }
function IPubSubService_tsickle_Closure_declarations() {
    /** @type {?} */
    IPubSubService.prototype.$pub;
    /** @type {?} */
    IPubSubService.prototype.$sub;
    /** @type {?} */
    IPubSubService.prototype.$sub;
    /** @type {?} */
    IPubSubService.prototype.$sub;
    /** @type {?} */
    IPubSubService.prototype.$sub;
}
/**
 * @record
 */
function I$sub() { }
function I$sub_tsickle_Closure_declarations() {
    /* TODO: handle strange member:
    (event: string): Observable<any>;
    */
    /* TODO: handle strange member:
    (event: string, callback: (value: any) => void): Subscription;
    */
    /* TODO: handle strange member:
    (event: string, callback: (value: any) => void, error: (error: any) => void): Subscription;
    */
    /* TODO: handle strange member:
    (event: string, callback: (value: any) => void, error: (error: any) => void, complete: () => void): Subscription;
    */
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibi1wdWJTdWIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25ldXRyaW5vcy1zZWVkLXNlcnZpY2VzLyIsInNvdXJjZXMiOlsic3JjL2FwcC9uZXV0cmlub3Mtc2VlZC1zZXJ2aWNlcy9uLXB1YlN1Yi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFJdkMsdUJBQU0sV0FBVyxHQUFXLGdCQUFnQixDQUFDO0FBRzdDLE1BQU07SUFHSjtzQkFGaUIsRUFBRTtLQUVGOzs7Ozs7OztJQU1WLElBQUksQ0FBQyxLQUFhLEVBQUUsUUFBK0IsRUFBRSxLQUE0QixFQUFFLFFBQXFCO1FBQzNHLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztZQUNULE1BQU0sSUFBSSxLQUFLLENBQUMsSUFBSSxXQUFXLCtDQUErQyxDQUFDLENBQUM7U0FDbkY7UUFFRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7WUFDbkMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxJQUFJLE9BQU8sRUFBTyxDQUFDO1NBQzNDO1FBRUQsRUFBRSxDQUFDLENBQUMsT0FBTyxRQUFRLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBQztZQUNqQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxZQUFZLEVBQUUsQ0FBQztTQUM1QztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ0osTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsWUFBWSxFQUFFLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBRSxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUM7U0FDakY7Ozs7Ozs7SUFHRSxJQUFJLENBQUMsS0FBYSxFQUFFLFdBQWlCO1FBQ3hDLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztZQUNULE1BQU0sSUFBSSxLQUFLLENBQUMsSUFBSSxXQUFXLDBDQUEwQyxDQUFDLENBQUM7U0FDOUU7UUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM3QixNQUFNLENBQUM7U0FDVjtRQUNELElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDOzs7O1lBaEMxQyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMvU3ViamVjdCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMvU3Vic2NyaXB0aW9uJztcblxuY29uc3QgU2VydmljZU5hbWU6IHN0cmluZyA9IFwiUHViU3ViIFNlcnZpY2VcIjtcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE5QdWJTdWJTZXJ2aWNlIHtcbiAgcHJpdmF0ZSBldmVudHMgPSB7fTtcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIHB1YmxpYyAkc3ViKGV2ZW50OiBzdHJpbmcpOiBPYnNlcnZhYmxlPGFueT47XG4gIHB1YmxpYyAkc3ViKGV2ZW50OiBzdHJpbmcsIGNhbGxiYWNrOiAodmFsdWU6IGFueSkgPT4gdm9pZCk6IFN1YnNjcmlwdGlvbjtcbiAgcHVibGljICRzdWIoZXZlbnQ6IHN0cmluZywgY2FsbGJhY2s6ICh2YWx1ZTogYW55KSA9PiB2b2lkLCBlcnJvcjogKGVycm9yOiBhbnkpID0+IHZvaWQpOiBTdWJzY3JpcHRpb247XG4gIHB1YmxpYyAkc3ViKGV2ZW50OiBzdHJpbmcsIGNhbGxiYWNrOiAodmFsdWU6IGFueSkgPT4gdm9pZCwgZXJyb3I6IChlcnJvcjogYW55KSA9PiB2b2lkLCBjb21wbGV0ZTogKCkgPT4gdm9pZCk6IFN1YnNjcmlwdGlvbjtcbiAgcHVibGljICRzdWIoZXZlbnQ6IHN0cmluZywgY2FsbGJhY2s/OiAodmFsdWU6IGFueSkgPT4gdm9pZCwgZXJyb3I/OiAoZXJyb3I6IGFueSkgPT4gdm9pZCwgY29tcGxldGU/OiAoKSA9PiB2b2lkKSB7XG4gICAgICBpZiAoIWV2ZW50KSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBbJHtTZXJ2aWNlTmFtZX1dID0+IFN1YnNjcmlwdGlvbiBtZXRob2QgbXVzdCBnZXQgZXZlbnQgbmFtZS5gKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuZXZlbnRzW2V2ZW50XSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgdGhpcy5ldmVudHNbZXZlbnRdID0gbmV3IFN1YmplY3Q8YW55PigpO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGNhbGxiYWNrICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuZXZlbnRzW2V2ZW50XS5hc09ic2VydmFibGUoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuZXZlbnRzW2V2ZW50XS5hc09ic2VydmFibGUoKS5zdWJzY3JpYmUoY2FsbGJhY2ssIGVycm9yLCBjb21wbGV0ZSk7XG4gICAgICB9XG4gIH1cblxuICBwdWJsaWMgJHB1YihldmVudDogc3RyaW5nLCBldmVudE9iamVjdD86IGFueSkge1xuICAgICAgaWYgKCFldmVudCkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgWyR7U2VydmljZU5hbWV9XSA9PiBQdWJsaXNoIG1ldGhvZCBtdXN0IGdldCBldmVudCBuYW1lLmApO1xuICAgICAgfSBlbHNlIGlmICghdGhpcy5ldmVudHNbZXZlbnRdKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgdGhpcy5ldmVudHNbZXZlbnRdLm5leHQoZXZlbnRPYmplY3QpO1xuICB9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVB1YlN1YlNlcnZpY2Uge1xuICAkcHViKGV2ZW50OiBzdHJpbmcsIGV2ZW50T2JqZWN0PzogYW55KTtcbiAgJHN1YihldmVudDogc3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+O1xuICAkc3ViKGV2ZW50OiBzdHJpbmcsIGNhbGxiYWNrOiAodmFsdWU6IGFueSkgPT4gdm9pZCk6IFN1YnNjcmlwdGlvbjtcbiAgJHN1YihldmVudDogc3RyaW5nLCBjYWxsYmFjazogKHZhbHVlOiBhbnkpID0+IHZvaWQsIGVycm9yOiAoZXJyb3I6IGFueSkgPT4gdm9pZCk6IFN1YnNjcmlwdGlvbjtcbiAgJHN1YihldmVudDogc3RyaW5nLCBjYWxsYmFjazogKHZhbHVlOiBhbnkpID0+IHZvaWQsIGVycm9yOiAoZXJyb3I6IGFueSkgPT4gdm9pZCwgY29tcGxldGU6ICgpID0+IHZvaWQpOiBTdWJzY3JpcHRpb247XG59XG5cbmludGVyZmFjZSBJJHN1YiB7XG4gIChldmVudDogc3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+O1xuICAoZXZlbnQ6IHN0cmluZywgY2FsbGJhY2s6ICh2YWx1ZTogYW55KSA9PiB2b2lkKTogU3Vic2NyaXB0aW9uO1xuICAoZXZlbnQ6IHN0cmluZywgY2FsbGJhY2s6ICh2YWx1ZTogYW55KSA9PiB2b2lkLCBlcnJvcjogKGVycm9yOiBhbnkpID0+IHZvaWQpOiBTdWJzY3JpcHRpb247XG4gIChldmVudDogc3RyaW5nLCBjYWxsYmFjazogKHZhbHVlOiBhbnkpID0+IHZvaWQsIGVycm9yOiAoZXJyb3I6IGFueSkgPT4gdm9pZCwgY29tcGxldGU6ICgpID0+IHZvaWQpOiBTdWJzY3JpcHRpb247XG59XG4iXX0=