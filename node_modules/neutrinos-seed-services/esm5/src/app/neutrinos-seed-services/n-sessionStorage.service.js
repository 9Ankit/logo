/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Injectable } from '@angular/core';
var NSessionStorageService = /** @class */ (function () {
    function NSessionStorageService() {
        NSessionStorageService.sessionStorageCache = sessionStorage;
    }
    /**
     * @return {?}
     */
    NSessionStorageService.prototype.getSessionStorage = /**
     * @return {?}
     */
    function () {
        return NSessionStorageService.sessionStorageCache;
    };
    /**
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    NSessionStorageService.prototype.setValue = /**
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    function (key, value) {
        NSessionStorageService.sessionStorageCache[key] = value;
        sessionStorage.setItem(key, value);
    };
    /**
     * @param {?} key
     * @return {?}
     */
    NSessionStorageService.prototype.getValue = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        if (!NSessionStorageService.sessionStorageCache[key]) {
            return null;
        }
        try {
            var /** @type {?} */ obj = NSessionStorageService.sessionStorageCache[key];
            return JSON.parse(obj);
        }
        catch (/** @type {?} */ error) {
            return NSessionStorageService.sessionStorageCache[key];
        }
    };
    /**
     * @param {?} key
     * @return {?}
     */
    NSessionStorageService.prototype.remove = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        if (NSessionStorageService.sessionStorageCache.hasOwnProperty(key)) {
            delete NSessionStorageService.sessionStorageCache[key];
            sessionStorage.removeItem(key);
        }
    };
    /**
     * @return {?}
     */
    NSessionStorageService.prototype.clearSessionStorage = /**
     * @return {?}
     */
    function () {
        NSessionStorageService.sessionStorageCache = {};
        sessionStorage.clear();
    };
    NSessionStorageService.sessionStorageCache = {};
    NSessionStorageService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    NSessionStorageService.ctorParameters = function () { return []; };
    return NSessionStorageService;
}());
export { NSessionStorageService };
function NSessionStorageService_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    NSessionStorageService.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    NSessionStorageService.ctorParameters;
    /** @type {?} */
    NSessionStorageService.sessionStorageCache;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibi1zZXNzaW9uU3RvcmFnZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmV1dHJpbm9zLXNlZWQtc2VydmljZXMvIiwic291cmNlcyI6WyJzcmMvYXBwL25ldXRyaW5vcy1zZWVkLXNlcnZpY2VzL24tc2Vzc2lvblN0b3JhZ2Uuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7SUFLekM7UUFDRSxzQkFBc0IsQ0FBQyxtQkFBbUIsR0FBRyxjQUFjLENBQUM7S0FDN0Q7Ozs7SUFFRCxrREFBaUI7OztJQUFqQjtRQUNFLE1BQU0sQ0FBQyxzQkFBc0IsQ0FBQyxtQkFBbUIsQ0FBQztLQUNuRDs7Ozs7O0lBRUQseUNBQVE7Ozs7O0lBQVIsVUFBUyxHQUFHLEVBQUUsS0FBSztRQUNqQixzQkFBc0IsQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUM7UUFDeEQsY0FBYyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUE7S0FDbkM7Ozs7O0lBRUQseUNBQVE7Ozs7SUFBUixVQUFTLEdBQUc7UUFDVixFQUFFLENBQUMsQ0FBQyxDQUFDLHNCQUFzQixDQUFDLG1CQUFtQixDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNyRCxNQUFNLENBQUMsSUFBSSxDQUFDO1NBQ2I7UUFDRCxJQUFJLENBQUM7WUFDSCxxQkFBTSxHQUFHLEdBQUcsc0JBQXNCLENBQUMsbUJBQW1CLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDNUQsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDeEI7UUFBQyxLQUFLLENBQUMsQ0FBQyxpQkFBQSxLQUFLLEVBQUUsQ0FBQztZQUNmLE1BQU0sQ0FBQyxzQkFBc0IsQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUN4RDtLQUNGOzs7OztJQUVELHVDQUFNOzs7O0lBQU4sVUFBTyxHQUFHO1FBQ1IsRUFBRSxDQUFDLENBQUMsc0JBQXNCLENBQUMsbUJBQW1CLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNuRSxPQUFPLHNCQUFzQixDQUFDLG1CQUFtQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3ZELGNBQWMsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDaEM7S0FDRjs7OztJQUVELG9EQUFtQjs7O0lBQW5CO1FBQ0Usc0JBQXNCLENBQUMsbUJBQW1CLEdBQUcsRUFBRSxDQUFDO1FBQ2hELGNBQWMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztLQUN4QjtpREFwQ2lDLEVBQUU7O2dCQUZyQyxVQUFVOzs7O2lDQUZYOztTQUdhLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE5TZXNzaW9uU3RvcmFnZVNlcnZpY2Uge1xuICBzdGF0aWMgc2Vzc2lvblN0b3JhZ2VDYWNoZTogYW55ID0ge307XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIE5TZXNzaW9uU3RvcmFnZVNlcnZpY2Uuc2Vzc2lvblN0b3JhZ2VDYWNoZSA9IHNlc3Npb25TdG9yYWdlO1xuICB9XG5cbiAgZ2V0U2Vzc2lvblN0b3JhZ2UoKSB7XG4gICAgcmV0dXJuIE5TZXNzaW9uU3RvcmFnZVNlcnZpY2Uuc2Vzc2lvblN0b3JhZ2VDYWNoZTtcbiAgfVxuXG4gIHNldFZhbHVlKGtleSwgdmFsdWUpIHtcbiAgICBOU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlLnNlc3Npb25TdG9yYWdlQ2FjaGVba2V5XSA9IHZhbHVlO1xuICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oa2V5LCB2YWx1ZSlcbiAgfVxuXG4gIGdldFZhbHVlKGtleSkge1xuICAgIGlmICghTlNlc3Npb25TdG9yYWdlU2VydmljZS5zZXNzaW9uU3RvcmFnZUNhY2hlW2tleV0pIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgY29uc3Qgb2JqID0gTlNlc3Npb25TdG9yYWdlU2VydmljZS5zZXNzaW9uU3RvcmFnZUNhY2hlW2tleV07XG4gICAgICByZXR1cm4gSlNPTi5wYXJzZShvYmopO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXR1cm4gTlNlc3Npb25TdG9yYWdlU2VydmljZS5zZXNzaW9uU3RvcmFnZUNhY2hlW2tleV07XG4gICAgfVxuICB9XG5cbiAgcmVtb3ZlKGtleSkge1xuICAgIGlmIChOU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlLnNlc3Npb25TdG9yYWdlQ2FjaGUuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgZGVsZXRlIE5TZXNzaW9uU3RvcmFnZVNlcnZpY2Uuc2Vzc2lvblN0b3JhZ2VDYWNoZVtrZXldO1xuICAgICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xuICAgIH1cbiAgfVxuXG4gIGNsZWFyU2Vzc2lvblN0b3JhZ2UoKSB7XG4gICAgTlNlc3Npb25TdG9yYWdlU2VydmljZS5zZXNzaW9uU3RvcmFnZUNhY2hlID0ge307XG4gICAgc2Vzc2lvblN0b3JhZ2UuY2xlYXIoKTtcbiAgfVxuXG59XG4iXX0=