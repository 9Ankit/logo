/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as platform from 'platform';
var NSystemService = /** @class */ (function () {
    function NSystemService() {
        this._deviceType = this.checkDevice();
    }
    /**
     * @return {?}
     */
    NSystemService.getInstance = /**
     * @return {?}
     */
    function () {
        if (!this.instance) {
            this.instance = new NSystemService();
        }
        return this.instance;
    };
    /**
     * Seter and getter for the environments
     */
    // set environments(properties) {
    //   console.log(properties);
    //   NSystemService.envProperties = properties;
    //   this.properties = this.getVal('properties');
    // }
    // get environments() {
    //   return NSystemService.envProperties;
    // }
    /**
     * Returna 'mobile' or 'browser' based on the platform
     */
    /**
     * Returna 'mobile' or 'browser' based on the platform
     * @return {?}
     */
    NSystemService.prototype.checkDevice = /**
     * Returna 'mobile' or 'browser' based on the platform
     * @return {?}
     */
    function () {
        if (window['device'] && (window['device']['platform'] != 'browser' || window['device']['platform'] != 'Browser')) {
            return 'mobile';
        }
        else if (window['device'] && (window['device']['platform'] == 'browser' || window['device']['platform'] == 'Browser')) {
            return 'cordova_browser';
        }
        else {
            return 'browser';
        }
    };
    Object.defineProperty(NSystemService.prototype, "deviceType", {
        get: /**
         * @return {?}
         */
        function () {
            return this._deviceType;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} key
     * @return {?}
     */
    NSystemService.prototype.getVal = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        if (!NSystemService.envProperties) {
            NSystemService.envProperties = window['neutrinos']['environments'];
            this.properties = NSystemService.envProperties.properties;
        }
        if (key == 'properties') {
            if (NSystemService.envProperties) {
                return NSystemService.envProperties.properties;
            }
            else {
                return undefined;
            }
        }
        else {
            if (NSystemService.envProperties && NSystemService.envProperties.properties) {
                return NSystemService.envProperties.properties[key];
            }
            else {
                return undefined;
            }
        }
    };
    /**
     * @return {?}
     */
    NSystemService.prototype.isAndroid = /**
     * @return {?}
     */
    function () {
        if (window['device'] && window['device']['platform'] == 'Android') {
            return true;
        }
        else {
            return false;
        }
    };
    /**
     * @return {?}
     */
    NSystemService.prototype.isIOS = /**
     * @return {?}
     */
    function () {
        if (window['device'] && window['device']['platform'] == 'iOS') {
            return true;
        }
        else {
            return false;
        }
    };
    /**
     * @return {?}
     */
    NSystemService.prototype.getAndroidVersion = /**
     * @return {?}
     */
    function () {
        if (this.isAndroid()) {
            return window['device']['version'];
        }
        else {
            return '';
        }
    };
    /**
     * @return {?}
     */
    NSystemService.prototype.getAuthUrl = /**
     * @return {?}
     */
    function () {
        // this.properties = this.getVal('properties');
        return this.properties.baseUrl + this.properties.tenantName + '/auth/';
    };
    /**
     * @return {?}
     */
    NSystemService.prototype.getTenantUrl = /**
     * @return {?}
     */
    function () {
        return this.properties.baseUrl + this.properties.tenantName + '/';
    };
    /**
     * @return {?}
     */
    NSystemService.prototype.getAppUrl = /**
     * @return {?}
     */
    function () {
        return this.properties.baseUrl + this.properties.tenantName + '/proxy/' + this.properties.appName + '/';
    };
    /**
     * @return {?}
     */
    NSystemService.prototype.getProxyUrl = /**
     * @return {?}
     */
    function () {
        return this.properties.baseUrl + this.properties.tenantName + '/proxy/';
    };
    /**
     * @return {?}
     */
    NSystemService.prototype.getDataModelUrl = /**
     * @return {?}
     */
    function () {
        return this.properties.baseUrl + this.properties.tenantName + '/datamodel/' + this.properties.appDataSource + '/' + this.properties.appName + '/';
    };
    /**
     * @return {?}
     */
    NSystemService.prototype.getFileIOUrl = /**
     * @return {?}
     */
    function () {
        return this.properties.baseUrl + this.properties.tenantName + '/fileio/' +
            this.properties.appDataSource + '/' + this.properties.appName + '/';
    };
    /**
     * @param {?} type
     * @return {?}
     */
    NSystemService.prototype.getPlatformDetails = /**
     * @param {?} type
     * @return {?}
     */
    function (type) {
        var /** @type {?} */ pDetails = {
            platform: platform.os.family,
            platformVersion: platform.os.version,
        };
        if (type === 'browser') {
            return Object.assign(pDetails, {
                type: 'browser',
                browser: platform.name,
                browserVersion: platform.version,
            });
        }
        else if (type === 'mobile' || type === 'cordova_browser') {
            return Object.assign(pDetails, {
                type: 'mobile',
                model: window['device'].model,
                manufacturer: window['device'].manufacturer,
                isVirtual: window['device'].isVirtual
            });
        }
    };
    return NSystemService;
}());
export { NSystemService };
function NSystemService_tsickle_Closure_declarations() {
    /** @type {?} */
    NSystemService.instance;
    /** @type {?} */
    NSystemService.envProperties;
    /** @type {?} */
    NSystemService.prototype._deviceType;
    /** @type {?} */
    NSystemService.prototype.uuid;
    /** @type {?} */
    NSystemService.prototype.properties;
}

//# sourceMappingURL=data:application/json;base64,