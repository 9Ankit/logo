/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { NgModule, APP_INITIALIZER } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HTTP_INTERCEPTORS } from '@angular/common/http';
import { NAuthGuardService } from './n-authGaurd.service';
import { NDataModelService } from './n-dataModel.service';
import { NHttpService } from './n-HTTP.service';
import { NHTTPLoaderService } from './n-HTTPLoader.service';
import { NLocalStorageService } from './n-localStorage.service';
import { NLoginService } from './n-login.service';
import { NLogoutService } from './n-logout.service';
import { NNotificationService } from './n-notification.service';
import { NSnackbarService } from './n-snackbar.service';
import { NPubSubService } from './n-pubSub.service';
import { NSessionStorageService } from './n-sessionStorage.service';
import { NTokenService } from './n-token.service';
import { HttpClientModule } from '@angular/common/http';
import { RouterModule } from '@angular/router';
import { HttpModule } from '@angular/http';
import { NgForageModule } from 'ngforage';
import { SnackComponent } from './snackbar/snack/snack.component';
import { SnackbarComponent } from './snackbar/snackbar/snackbar.component';
/**
 * @param {?} startupService
 * @return {?}
 */
export function startupServiceFactory(startupService) {
    var /** @type {?} */ res = function () {
        // console.log('module before initstorage call');
        return startupService.initStorage();
    };
    return res;
}
var NeutrinosSeedServicesModule = /** @class */ (function () {
    function NeutrinosSeedServicesModule() {
    }
    NeutrinosSeedServicesModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        HttpClientModule,
                        RouterModule,
                        HttpModule,
                        NgForageModule.forRoot()
                    ],
                    providers: [
                        {
                            provide: HTTP_INTERCEPTORS,
                            useClass: NHttpService,
                            multi: true
                        },
                        {
                            // Provider for APP_INITIALIZER
                            provide: APP_INITIALIZER,
                            useFactory: startupServiceFactory,
                            deps: [NLocalStorageService],
                            multi: true
                        },
                        NAuthGuardService,
                        NDataModelService,
                        NHttpService,
                        NHTTPLoaderService,
                        NLocalStorageService,
                        NLoginService,
                        NLogoutService,
                        NNotificationService,
                        NSnackbarService,
                        NPubSubService,
                        NSessionStorageService,
                        NTokenService
                    ],
                    declarations: [
                        SnackComponent,
                        SnackbarComponent
                    ],
                    exports: [
                        SnackComponent,
                        SnackbarComponent
                    ]
                },] },
    ];
    return NeutrinosSeedServicesModule;
}());
export { NeutrinosSeedServicesModule };
function NeutrinosSeedServicesModule_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    NeutrinosSeedServicesModule.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    NeutrinosSeedServicesModule.ctorParameters;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV1dHJpbm9zLXNlZWQtc2VydmljZXMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmV1dHJpbm9zLXNlZWQtc2VydmljZXMvIiwic291cmNlcyI6WyJzcmMvYXBwL25ldXRyaW5vcy1zZWVkLXNlcnZpY2VzL25ldXRyaW5vcy1zZWVkLXNlcnZpY2VzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsZUFBZSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9FLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUcvQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUd6RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQTtBQUN6RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUUxRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNwRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUV4RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDcEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUE7QUFDbkUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRXhELE9BQU8sRUFBRSxZQUFZLEVBQVUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFFMUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHdDQUF3QyxDQUFDOzs7OztBQVMzRSxNQUFNLGdDQUFnQyxjQUFvQztJQUN4RSxxQkFBTSxHQUFHLEdBQUc7O1FBRVYsTUFBTSxDQUFDLGNBQWMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztLQUVyQyxDQUFBO0lBQ0QsTUFBTSxDQUFDLEdBQUcsQ0FBQztDQUNaOzs7OztnQkFHQSxRQUFRLFNBQUM7b0JBQ1IsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osZ0JBQWdCO3dCQUNoQixZQUFZO3dCQUNaLFVBQVU7d0JBQ1YsY0FBYyxDQUFDLE9BQU8sRUFBRTtxQkFFekI7b0JBQ0QsU0FBUyxFQUFFO3dCQUNUOzRCQUNFLE9BQU8sRUFBRSxpQkFBaUI7NEJBQzFCLFFBQVEsRUFBRSxZQUFZOzRCQUN0QixLQUFLLEVBQUUsSUFBSTt5QkFDWjt3QkFDRDs7NEJBRUUsT0FBTyxFQUFFLGVBQWU7NEJBQ3hCLFVBQVUsRUFBRSxxQkFBcUI7NEJBQ2pDLElBQUksRUFBRSxDQUFDLG9CQUFvQixDQUFDOzRCQUM1QixLQUFLLEVBQUUsSUFBSTt5QkFDWjt3QkFDRCxpQkFBaUI7d0JBQ2pCLGlCQUFpQjt3QkFFakIsWUFBWTt3QkFDWixrQkFBa0I7d0JBQ2xCLG9CQUFvQjt3QkFDcEIsYUFBYTt3QkFDYixjQUFjO3dCQUNkLG9CQUFvQjt3QkFDcEIsZ0JBQWdCO3dCQUNoQixjQUFjO3dCQUVkLHNCQUFzQjt3QkFDdEIsYUFBYTtxQkFDZDtvQkFDRCxZQUFZLEVBQUU7d0JBQ1osY0FBYzt3QkFDZCxpQkFBaUI7cUJBQ2xCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxjQUFjO3dCQUNkLGlCQUFpQjtxQkFDbEI7aUJBRUY7O3NDQTdGRDs7U0E4RmEsMkJBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMsIEFQUF9JTklUSUFMSVpFUiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbi8vIGltcG9ydCB7IEJyb3dzZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcblxuaW1wb3J0IHsgSFRUUF9JTlRFUkNFUFRPUlMgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG4vLyBpbXBvcnQgeyBCcm93c2VyQW5pbWF0aW9uc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXIvYW5pbWF0aW9ucyc7XG4vLyBpbXBvcnQgeyBNYXRTbmFja0JhciB9IGZyb20gXCJAYW5ndWxhci9tYXRlcmlhbFwiO1xuaW1wb3J0IHsgTkF1dGhHdWFyZFNlcnZpY2UgfSBmcm9tICcuL24tYXV0aEdhdXJkLnNlcnZpY2UnXG5pbXBvcnQgeyBORGF0YU1vZGVsU2VydmljZSB9IGZyb20gJy4vbi1kYXRhTW9kZWwuc2VydmljZSc7XG4vLyBpbXBvcnQgeyBORGF0YVNvdXJjZVNlcnZpY2UgfSBmcm9tICcuL24tZGF0YVNvdXJjZS5zZXJ2aWNlJztcbmltcG9ydCB7IE5IdHRwU2VydmljZSB9IGZyb20gJy4vbi1IVFRQLnNlcnZpY2UnO1xuaW1wb3J0IHsgTkhUVFBMb2FkZXJTZXJ2aWNlIH0gZnJvbSAnLi9uLUhUVFBMb2FkZXIuc2VydmljZSc7XG5pbXBvcnQgeyBOTG9jYWxTdG9yYWdlU2VydmljZSB9IGZyb20gJy4vbi1sb2NhbFN0b3JhZ2Uuc2VydmljZSc7XG5pbXBvcnQgeyBOTG9naW5TZXJ2aWNlIH0gZnJvbSAnLi9uLWxvZ2luLnNlcnZpY2UnO1xuaW1wb3J0IHsgTkxvZ291dFNlcnZpY2UgfSBmcm9tICcuL24tbG9nb3V0LnNlcnZpY2UnO1xuaW1wb3J0IHsgTk5vdGlmaWNhdGlvblNlcnZpY2UgfSBmcm9tICcuL24tbm90aWZpY2F0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgTlNuYWNrYmFyU2VydmljZSB9IGZyb20gJy4vbi1zbmFja2Jhci5zZXJ2aWNlJztcbmltcG9ydCB7IE5TeXN0ZW1TZXJ2aWNlIH0gZnJvbSAnLi9uLXN5c3RlbS5zZXJ2aWNlJztcbmltcG9ydCB7IE5QdWJTdWJTZXJ2aWNlIH0gZnJvbSAnLi9uLXB1YlN1Yi5zZXJ2aWNlJztcbmltcG9ydCB7IE5TZXNzaW9uU3RvcmFnZVNlcnZpY2UgfSBmcm9tICcuL24tc2Vzc2lvblN0b3JhZ2Uuc2VydmljZSdcbmltcG9ydCB7IE5Ub2tlblNlcnZpY2UgfSBmcm9tICcuL24tdG9rZW4uc2VydmljZSc7XG5pbXBvcnQgeyBIdHRwQ2xpZW50TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuLy8gaW1wb3J0IHsgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IFJvdXRlck1vZHVsZSwgUm91dGVzIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IEh0dHBNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9odHRwJztcbmltcG9ydCB7IE5nRm9yYWdlTW9kdWxlIH0gZnJvbSAnbmdmb3JhZ2UnO1xuXG5pbXBvcnQgeyBTbmFja0NvbXBvbmVudCB9IGZyb20gJy4vc25hY2tiYXIvc25hY2svc25hY2suY29tcG9uZW50JztcbmltcG9ydCB7IFNuYWNrYmFyQ29tcG9uZW50IH0gZnJvbSAnLi9zbmFja2Jhci9zbmFja2Jhci9zbmFja2Jhci5jb21wb25lbnQnO1xuLy8gaW1wb3J0IHtTYWZlSHRtbFBpcGV9IGZyb20gJy4vc25hY2tiYXIvcGlwZS9zYWZlLWh0bWwucGlwZSc7XG5cblxuLy8gZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUVudlByb3BlcnRpZXMoZW52KSB7XG4vLyAgIGNvbnNvbGUubG9nKGVudik7XG4vLyAgIE5TeXN0ZW1TZXJ2aWNlLmdldEluc3RhbmNlKCkuZW52aXJvbm1lbnRzID0gZW52O1xuLy8gfVxuXG5leHBvcnQgZnVuY3Rpb24gc3RhcnR1cFNlcnZpY2VGYWN0b3J5KHN0YXJ0dXBTZXJ2aWNlOiBOTG9jYWxTdG9yYWdlU2VydmljZSkge1xuICBjb25zdCByZXMgPSAoKSA9PiB7XG4gICAgLy8gY29uc29sZS5sb2coJ21vZHVsZSBiZWZvcmUgaW5pdHN0b3JhZ2UgY2FsbCcpO1xuICAgIHJldHVybiBzdGFydHVwU2VydmljZS5pbml0U3RvcmFnZSgpO1xuXG4gIH1cbiAgcmV0dXJuIHJlcztcbn1cblxuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIEh0dHBDbGllbnRNb2R1bGUsXG4gICAgUm91dGVyTW9kdWxlLFxuICAgIEh0dHBNb2R1bGUsXG4gICAgTmdGb3JhZ2VNb2R1bGUuZm9yUm9vdCgpXG4gICAgLy8gQnJvd3Nlck1vZHVsZVxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBIVFRQX0lOVEVSQ0VQVE9SUyxcbiAgICAgIHVzZUNsYXNzOiBOSHR0cFNlcnZpY2UsXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH0sXG4gICAge1xuICAgICAgLy8gUHJvdmlkZXIgZm9yIEFQUF9JTklUSUFMSVpFUlxuICAgICAgcHJvdmlkZTogQVBQX0lOSVRJQUxJWkVSLFxuICAgICAgdXNlRmFjdG9yeTogc3RhcnR1cFNlcnZpY2VGYWN0b3J5LFxuICAgICAgZGVwczogW05Mb2NhbFN0b3JhZ2VTZXJ2aWNlXSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfSxcbiAgICBOQXV0aEd1YXJkU2VydmljZSxcbiAgICBORGF0YU1vZGVsU2VydmljZSxcbiAgICAvLyBORGF0YVNvdXJjZVNlcnZpY2UsXG4gICAgTkh0dHBTZXJ2aWNlLFxuICAgIE5IVFRQTG9hZGVyU2VydmljZSxcbiAgICBOTG9jYWxTdG9yYWdlU2VydmljZSxcbiAgICBOTG9naW5TZXJ2aWNlLFxuICAgIE5Mb2dvdXRTZXJ2aWNlLFxuICAgIE5Ob3RpZmljYXRpb25TZXJ2aWNlLFxuICAgIE5TbmFja2JhclNlcnZpY2UsXG4gICAgTlB1YlN1YlNlcnZpY2UsXG4gICAgLy8gICAgIE5TeXN0ZW1TZXJ2aWNlLFxuICAgIE5TZXNzaW9uU3RvcmFnZVNlcnZpY2UsXG4gICAgTlRva2VuU2VydmljZVxuICBdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBTbmFja0NvbXBvbmVudCxcbiAgICBTbmFja2JhckNvbXBvbmVudFxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgU25hY2tDb21wb25lbnQsXG4gICAgU25hY2tiYXJDb21wb25lbnRcbiAgXVxuXG59KVxuZXhwb3J0IGNsYXNzIE5ldXRyaW5vc1NlZWRTZXJ2aWNlc01vZHVsZSB7XG5cbn1cbiJdfQ==