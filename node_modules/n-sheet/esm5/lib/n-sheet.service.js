/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
var NSheetService = /** @class */ (function () {
    function NSheetService(http) {
        this.http = http;
    }
    /**
     * @param {?=} sheetOptions
     * @param {?=} htmlContent
     * @return {?}
     */
    NSheetService.prototype.getSheet = /**
     * @param {?=} sheetOptions
     * @param {?=} htmlContent
     * @return {?}
     */
    function (sheetOptions, htmlContent) {
        var _this = this;
        return new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) {
            if (typeof sheetOptions === 'object') {
                if (sheetOptions.hasOwnProperty('url')) {
                    delete sheetOptions.retPure;
                    sheetOptions.httpMethod = (sheetOptions.hasOwnProperty('httpMethod') && (sheetOptions.httpMethod.toLowerCase().trim() === 'get' || sheetOptions.httpMethod.toLowerCase().trim() === 'put')) ? sheetOptions.httpMethod.toLowerCase().trim() : 'post';
                    /** @type {?} */
                    var body = (sheetOptions.httpMethod.toLowerCase().trim() === 'get') ? {} : sheetOptions;
                    _this.executeCallback(sheetOptions).then((/**
                     * @param {?} res
                     * @return {?}
                     */
                    function (res) {
                        _this.http[sheetOptions.httpMethod.toLowerCase().trim()](sheetOptions.url, body).subscribe((/**
                         * @param {?} response
                         * @return {?}
                         */
                        function (response) {
                            return resolve(response);
                        }), (/**
                         * @param {?} error
                         * @return {?}
                         */
                        function (error) {
                            return reject(error);
                        }));
                    })).catch((/**
                     * @param {?} err
                     * @return {?}
                     */
                    function (err) {
                        return reject(err);
                    }));
                }
                else {
                    return reject('No url');
                }
            }
            else if (htmlContent) {
                return resolve({ excelAsHtml: htmlContent });
            }
            else {
                return reject('Please specify correct values for sheetOptions / htmlContent');
            }
        }));
    };
    /**
     * @param {?} sheetOptions
     * @return {?}
     */
    NSheetService.prototype.executeCallback = /**
     * @param {?} sheetOptions
     * @return {?}
     */
    function (sheetOptions) {
        return new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) {
            if (sheetOptions.hasOwnProperty('preHttpRequestCallback') && (sheetOptions.preHttpRequestCallback instanceof Promise)) {
                sheetOptions.preHttpRequestCallback.then((/**
                 * @param {?} res
                 * @return {?}
                 */
                function (res) {
                    return resolve();
                })).catch((/**
                 * @param {?} err
                 * @return {?}
                 */
                function (err) {
                    return reject('Promise function returned a reject');
                }));
            }
            else if (sheetOptions.hasOwnProperty('preHttpRequestCallback') && (typeof sheetOptions.preHttpRequestCallback === 'boolean')) {
                if (sheetOptions.preHttpRequestCallback === true) {
                    return resolve();
                }
                else {
                    return reject('Boolean function returned a false');
                }
            }
            else if (sheetOptions.hasOwnProperty('preHttpRequestCallback') && (typeof sheetOptions.preHttpRequestCallback === 'function')) {
                if (sheetOptions.preHttpRequestCallback() === true) {
                    return resolve();
                }
                else {
                    return reject('Callback function either returned a false or did not return a boolean value');
                }
            }
            else {
                return resolve();
            }
        }));
    };
    NSheetService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    NSheetService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    /** @nocollapse */ NSheetService.ngInjectableDef = i0.defineInjectable({ factory: function NSheetService_Factory() { return new NSheetService(i0.inject(i1.HttpClient)); }, token: NSheetService, providedIn: "root" });
    return NSheetService;
}());
export { NSheetService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NSheetService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibi1zaGVldC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbi1zaGVldC8iLCJzb3VyY2VzIjpbImxpYi9uLXNoZWV0LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDOzs7QUFJbEQ7SUFNRSx1QkFBb0IsSUFBZ0I7UUFBaEIsU0FBSSxHQUFKLElBQUksQ0FBWTtJQUNwQyxDQUFDOzs7Ozs7SUFFTSxnQ0FBUTs7Ozs7SUFBZixVQUFnQixZQUFhLEVBQUUsV0FBWTtRQUEzQyxpQkF5QkM7UUF4QkMsT0FBTyxJQUFJLE9BQU87Ozs7O1FBQUMsVUFBQyxPQUFPLEVBQUUsTUFBTTtZQUNqQyxJQUFJLE9BQU8sWUFBWSxLQUFLLFFBQVEsRUFBRTtnQkFDcEMsSUFBSSxZQUFZLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxFQUFFO29CQUN0QyxPQUFPLFlBQVksQ0FBQyxPQUFPLENBQUM7b0JBQzVCLFlBQVksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxZQUFZLENBQUMsY0FBYyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxLQUFLLElBQUksWUFBWSxDQUFDLFVBQVUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLFdBQVcsRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7O3dCQUNoUCxJQUFJLEdBQUcsQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLFdBQVcsRUFBRSxDQUFDLElBQUksRUFBRSxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFlBQVk7b0JBQ3ZGLEtBQUksQ0FBQyxlQUFlLENBQUMsWUFBWSxDQUFDLENBQUMsSUFBSTs7OztvQkFBQyxVQUFBLEdBQUc7d0JBQ3pDLEtBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUMsU0FBUzs7Ozt3QkFBQyxVQUFBLFFBQVE7NEJBQ2hHLE9BQU8sT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO3dCQUMzQixDQUFDOzs7O3dCQUFFLFVBQUEsS0FBSzs0QkFDTixPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQzt3QkFDdkIsQ0FBQyxFQUFDLENBQUM7b0JBQ0wsQ0FBQyxFQUFDLENBQUMsS0FBSzs7OztvQkFBQyxVQUFBLEdBQUc7d0JBQ1YsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7b0JBQ3JCLENBQUMsRUFBQyxDQUFDO2lCQUNKO3FCQUFNO29CQUNMLE9BQU8sTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2lCQUN6QjthQUNGO2lCQUFNLElBQUksV0FBVyxFQUFFO2dCQUN0QixPQUFPLE9BQU8sQ0FBQyxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsQ0FBQyxDQUFDO2FBQzlDO2lCQUFNO2dCQUNMLE9BQU8sTUFBTSxDQUFDLDhEQUE4RCxDQUFDLENBQUM7YUFDL0U7UUFDSCxDQUFDLEVBQUMsQ0FBQztJQUNMLENBQUM7Ozs7O0lBRUQsdUNBQWU7Ozs7SUFBZixVQUFnQixZQUFZO1FBQzFCLE9BQU8sSUFBSSxPQUFPOzs7OztRQUFDLFVBQUMsT0FBTyxFQUFFLE1BQU07WUFDakMsSUFBSSxZQUFZLENBQUMsY0FBYyxDQUFDLHdCQUF3QixDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsc0JBQXNCLFlBQVksT0FBTyxDQUFDLEVBQUU7Z0JBQ3JILFlBQVksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJOzs7O2dCQUFDLFVBQUEsR0FBRztvQkFDMUMsT0FBTyxPQUFPLEVBQUUsQ0FBQztnQkFDbkIsQ0FBQyxFQUFDLENBQUMsS0FBSzs7OztnQkFBQyxVQUFBLEdBQUc7b0JBQ1YsT0FBTyxNQUFNLENBQUMsb0NBQW9DLENBQUMsQ0FBQztnQkFDdEQsQ0FBQyxFQUFDLENBQUM7YUFDSjtpQkFBTSxJQUFJLFlBQVksQ0FBQyxjQUFjLENBQUMsd0JBQXdCLENBQUMsSUFBSSxDQUFDLE9BQU8sWUFBWSxDQUFDLHNCQUFzQixLQUFLLFNBQVMsQ0FBQyxFQUFFO2dCQUM5SCxJQUFHLFlBQVksQ0FBQyxzQkFBc0IsS0FBSyxJQUFJLEVBQUU7b0JBQy9DLE9BQU8sT0FBTyxFQUFFLENBQUM7aUJBQ2xCO3FCQUFNO29CQUNMLE9BQU8sTUFBTSxDQUFDLG1DQUFtQyxDQUFDLENBQUM7aUJBQ3BEO2FBQ0Y7aUJBQU0sSUFBSSxZQUFZLENBQUMsY0FBYyxDQUFDLHdCQUF3QixDQUFDLElBQUksQ0FBQyxPQUFPLFlBQVksQ0FBQyxzQkFBc0IsS0FBSyxVQUFVLENBQUMsRUFBRTtnQkFDN0gsSUFBRyxZQUFZLENBQUMsc0JBQXNCLEVBQUUsS0FBSyxJQUFJLEVBQUU7b0JBQ2pELE9BQU8sT0FBTyxFQUFFLENBQUM7aUJBQ2xCO3FCQUFNO29CQUNMLE9BQU8sTUFBTSxDQUFDLDZFQUE2RSxDQUFDLENBQUM7aUJBQzlGO2FBQ0o7aUJBQU07Z0JBQ0wsT0FBTyxPQUFPLEVBQUUsQ0FBQzthQUNsQjtRQUNILENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7Z0JBNURGLFVBQVUsU0FBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7Ozs7Z0JBTlEsVUFBVTs7O3dCQURuQjtDQW1FQyxBQTlERCxJQThEQztTQTFEWSxhQUFhOzs7Ozs7SUFFWiw2QkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgcG9zdCB9IGZyb20gJ3NlbGVuaXVtLXdlYmRyaXZlci9odHRwJztcbmltcG9ydCB7IHByb21pc2UgfSBmcm9tICdwcm90cmFjdG9yJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5cbmV4cG9ydCBjbGFzcyBOU2hlZXRTZXJ2aWNlIHtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6IEh0dHBDbGllbnQpIHtcbiAgfVxuXG4gIHB1YmxpYyBnZXRTaGVldChzaGVldE9wdGlvbnM/LCBodG1sQ29udGVudD8pIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgaWYgKHR5cGVvZiBzaGVldE9wdGlvbnMgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIGlmIChzaGVldE9wdGlvbnMuaGFzT3duUHJvcGVydHkoJ3VybCcpKSB7XG4gICAgICAgICAgZGVsZXRlIHNoZWV0T3B0aW9ucy5yZXRQdXJlO1xuICAgICAgICAgIHNoZWV0T3B0aW9ucy5odHRwTWV0aG9kID0gKHNoZWV0T3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSgnaHR0cE1ldGhvZCcpICYmIChzaGVldE9wdGlvbnMuaHR0cE1ldGhvZC50b0xvd2VyQ2FzZSgpLnRyaW0oKSA9PT0gJ2dldCcgfHwgc2hlZXRPcHRpb25zLmh0dHBNZXRob2QudG9Mb3dlckNhc2UoKS50cmltKCkgPT09ICdwdXQnKSkgPyBzaGVldE9wdGlvbnMuaHR0cE1ldGhvZC50b0xvd2VyQ2FzZSgpLnRyaW0oKSA6ICdwb3N0JztcbiAgICAgICAgICB2YXIgYm9keSA9IChzaGVldE9wdGlvbnMuaHR0cE1ldGhvZC50b0xvd2VyQ2FzZSgpLnRyaW0oKSA9PT0gJ2dldCcpID8ge30gOiBzaGVldE9wdGlvbnM7XG4gICAgICAgICAgdGhpcy5leGVjdXRlQ2FsbGJhY2soc2hlZXRPcHRpb25zKS50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICB0aGlzLmh0dHBbc2hlZXRPcHRpb25zLmh0dHBNZXRob2QudG9Mb3dlckNhc2UoKS50cmltKCldKHNoZWV0T3B0aW9ucy51cmwsIGJvZHkpLnN1YnNjcmliZShyZXNwb25zZSA9PiB7XG4gICAgICAgICAgICAgIHJldHVybiByZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0sIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgcmV0dXJuIHJlamVjdChlcnJvcik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9KS5jYXRjaChlcnIgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHJlamVjdChlcnIpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiByZWplY3QoJ05vIHVybCcpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGh0bWxDb250ZW50KSB7XG4gICAgICAgIHJldHVybiByZXNvbHZlKHsgZXhjZWxBc0h0bWw6IGh0bWxDb250ZW50IH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHJlamVjdCgnUGxlYXNlIHNwZWNpZnkgY29ycmVjdCB2YWx1ZXMgZm9yIHNoZWV0T3B0aW9ucyAvIGh0bWxDb250ZW50Jyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBleGVjdXRlQ2FsbGJhY2soc2hlZXRPcHRpb25zKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGlmIChzaGVldE9wdGlvbnMuaGFzT3duUHJvcGVydHkoJ3ByZUh0dHBSZXF1ZXN0Q2FsbGJhY2snKSAmJiAoc2hlZXRPcHRpb25zLnByZUh0dHBSZXF1ZXN0Q2FsbGJhY2sgaW5zdGFuY2VvZiBQcm9taXNlKSkge1xuICAgICAgICBzaGVldE9wdGlvbnMucHJlSHR0cFJlcXVlc3RDYWxsYmFjay50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgcmV0dXJuIHJlc29sdmUoKTtcbiAgICAgICAgfSkuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICByZXR1cm4gcmVqZWN0KCdQcm9taXNlIGZ1bmN0aW9uIHJldHVybmVkIGEgcmVqZWN0Jyk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmIChzaGVldE9wdGlvbnMuaGFzT3duUHJvcGVydHkoJ3ByZUh0dHBSZXF1ZXN0Q2FsbGJhY2snKSAmJiAodHlwZW9mIHNoZWV0T3B0aW9ucy5wcmVIdHRwUmVxdWVzdENhbGxiYWNrID09PSAnYm9vbGVhbicpKSB7IFxuICAgICAgICBpZihzaGVldE9wdGlvbnMucHJlSHR0cFJlcXVlc3RDYWxsYmFjayA9PT0gdHJ1ZSkge1xuICAgICAgICAgIHJldHVybiByZXNvbHZlKCk7IFxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiByZWplY3QoJ0Jvb2xlYW4gZnVuY3Rpb24gcmV0dXJuZWQgYSBmYWxzZScpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHNoZWV0T3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSgncHJlSHR0cFJlcXVlc3RDYWxsYmFjaycpICYmICh0eXBlb2Ygc2hlZXRPcHRpb25zLnByZUh0dHBSZXF1ZXN0Q2FsbGJhY2sgPT09ICdmdW5jdGlvbicpKSB7IFxuICAgICAgICAgIGlmKHNoZWV0T3B0aW9ucy5wcmVIdHRwUmVxdWVzdENhbGxiYWNrKCkgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHJldHVybiByZXNvbHZlKCk7IFxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gcmVqZWN0KCdDYWxsYmFjayBmdW5jdGlvbiBlaXRoZXIgcmV0dXJuZWQgYSBmYWxzZSBvciBkaWQgbm90IHJldHVybiBhIGJvb2xlYW4gdmFsdWUnKTtcbiAgICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gcmVzb2x2ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbn0iXX0=