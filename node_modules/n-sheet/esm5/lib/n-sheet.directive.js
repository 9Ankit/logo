/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, Output, EventEmitter, ElementRef } from '@angular/core';
import { NSheetService } from './n-sheet.service';
import { HttpClient } from '@angular/common/http';
var NSheetDirective = /** @class */ (function () {
    function NSheetDirective(sheetService, http, el) {
        this.sheetService = sheetService;
        this.http = http;
        this.el = el;
        this.onsuccess = new EventEmitter();
        this.onerror = new EventEmitter();
    }
    /**
     * @return {?}
     */
    NSheetDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.getSheet()
            .then((/**
         * @param {?} success
         * @return {?}
         */
        function (success) { return _this.onsuccess.emit(success); }))
            .catch((/**
         * @param {?} error
         * @return {?}
         */
        function (error) { return _this.onerror.emit(error); }));
    };
    /**
     * @return {?}
     */
    NSheetDirective.prototype.getSheet = /**
     * @return {?}
     */
    function () {
        var _this = this;
        return new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) {
            _this.sheetService.getSheet(_this.sheetOptions, _this.htmlContent).then((/**
             * @param {?} res
             * @return {?}
             */
            function (res) {
                if (res.hasOwnProperty('excelAsHtml') && res['excelAsHtml'].length > 0 && !Array.isArray(res['excelAsHtml'])) {
                    if (!(typeof _this.sheetOptions === 'object' && _this.sheetOptions.hasOwnProperty('doAppend') && _this.sheetOptions.doAppend === true)) {
                        _this.el.nativeElement.innerHTML = "";
                    }
                    /** @type {?} */
                    var fragment = document.createRange().createContextualFragment(res['excelAsHtml']);
                    _this.el.nativeElement.appendChild(fragment);
                    return resolve(res);
                }
                else {
                    return reject(res);
                }
            })).catch((/**
             * @param {?} err
             * @return {?}
             */
            function (err) { return reject(err); }));
        }));
    };
    NSheetDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[n-sheet]'
                },] }
    ];
    /** @nocollapse */
    NSheetDirective.ctorParameters = function () { return [
        { type: NSheetService },
        { type: HttpClient },
        { type: ElementRef }
    ]; };
    NSheetDirective.propDecorators = {
        sheetOptions: [{ type: Input }],
        htmlContent: [{ type: Input }],
        onsuccess: [{ type: Output }],
        onerror: [{ type: Output }]
    };
    return NSheetDirective;
}());
export { NSheetDirective };
if (false) {
    /** @type {?} */
    NSheetDirective.prototype.sheetOptions;
    /** @type {?} */
    NSheetDirective.prototype.htmlContent;
    /** @type {?} */
    NSheetDirective.prototype.onsuccess;
    /** @type {?} */
    NSheetDirective.prototype.onerror;
    /**
     * @type {?}
     * @private
     */
    NSheetDirective.prototype.sheetService;
    /**
     * @type {?}
     * @private
     */
    NSheetDirective.prototype.http;
    /**
     * @type {?}
     * @private
     */
    NSheetDirective.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibi1zaGVldC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uLXNoZWV0LyIsInNvdXJjZXMiOlsibGliL24tc2hlZXQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFVLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzRixPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBR2xEO0lBU0UseUJBQW9CLFlBQTJCLEVBQVUsSUFBZ0IsRUFBVSxFQUFjO1FBQTdFLGlCQUFZLEdBQVosWUFBWSxDQUFlO1FBQVUsU0FBSSxHQUFKLElBQUksQ0FBWTtRQUFVLE9BQUUsR0FBRixFQUFFLENBQVk7UUFIdkYsY0FBUyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ2xELFlBQU8sR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUUyQyxDQUFDOzs7O0lBRXRHLGtDQUFROzs7SUFBUjtRQUFBLGlCQUlFO1FBSEEsSUFBSSxDQUFDLFFBQVEsRUFBRTthQUNkLElBQUk7Ozs7UUFBQyxVQUFBLE9BQU8sSUFBSSxPQUFBLEtBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUE1QixDQUE0QixFQUFDO2FBQzdDLEtBQUs7Ozs7UUFBQyxVQUFBLEtBQUssSUFBSSxPQUFBLEtBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUF4QixDQUF3QixFQUFDLENBQUM7SUFDM0MsQ0FBQzs7OztJQUVGLGtDQUFROzs7SUFBUjtRQUFBLGlCQWVDO1FBZEMsT0FBTyxJQUFJLE9BQU87Ozs7O1FBQUMsVUFBQyxPQUFPLEVBQUUsTUFBTTtZQUNqQyxLQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxLQUFJLENBQUMsWUFBWSxFQUFDLEtBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxJQUFJOzs7O1lBQUMsVUFBQSxHQUFHO2dCQUNyRSxJQUFHLEdBQUcsQ0FBQyxjQUFjLENBQUMsYUFBYSxDQUFDLElBQUksR0FBRyxDQUFDLGFBQWEsQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUFFO29CQUMzRyxJQUFHLENBQUMsQ0FBQyxPQUFPLEtBQUksQ0FBQyxZQUFZLEtBQUssUUFBUSxJQUFJLEtBQUksQ0FBQyxZQUFZLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBQyxJQUFJLEtBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxLQUFLLElBQUksQ0FBQyxFQUFFO3dCQUNsSSxLQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDO3FCQUN0Qzs7d0JBQ0ssUUFBUSxHQUFHLFFBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyx3QkFBd0IsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLENBQUM7b0JBQ3BGLEtBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztvQkFDNUMsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7aUJBQ3JCO3FCQUFNO29CQUNMLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2lCQUNwQjtZQUNILENBQUMsRUFBQyxDQUFDLEtBQUs7Ozs7WUFBQyxVQUFBLEdBQUcsSUFBSSxPQUFBLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBWCxDQUFXLEVBQUMsQ0FBQztRQUMvQixDQUFDLEVBQUMsQ0FBQztJQUNMLENBQUM7O2dCQWhDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLFdBQVc7aUJBQ3RCOzs7O2dCQU5RLGFBQWE7Z0JBQ2IsVUFBVTtnQkFGc0MsVUFBVTs7OytCQVNoRSxLQUFLOzhCQUNMLEtBQUs7NEJBQ0wsTUFBTTswQkFDTixNQUFNOztJQTJCVCxzQkFBQztDQUFBLEFBbENELElBa0NDO1NBL0JZLGVBQWU7OztJQUMxQix1Q0FBc0I7O0lBQ3RCLHNDQUFxQjs7SUFDckIsb0NBQTREOztJQUM1RCxrQ0FBMEQ7Ozs7O0lBRTlDLHVDQUFtQzs7Ozs7SUFBRSwrQkFBd0I7Ozs7O0lBQUUsNkJBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIE9uSW5pdCwgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTlNoZWV0U2VydmljZSB9IGZyb20gJy4vbi1zaGVldC5zZXJ2aWNlJztcbmltcG9ydCB7IEh0dHBDbGllbnQgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5cblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW24tc2hlZXRdJ1xufSlcbmV4cG9ydCBjbGFzcyBOU2hlZXREaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSBzaGVldE9wdGlvbnM7XG4gIEBJbnB1dCgpIGh0bWxDb250ZW50O1xuICBAT3V0cHV0KCkgb25zdWNjZXNzOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIG9uZXJyb3I6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgc2hlZXRTZXJ2aWNlOiBOU2hlZXRTZXJ2aWNlLCBwcml2YXRlIGh0dHA6IEh0dHBDbGllbnQsIHByaXZhdGUgZWw6IEVsZW1lbnRSZWYpIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuZ2V0U2hlZXQoKVxuICAgIC50aGVuKHN1Y2Nlc3MgPT4gdGhpcy5vbnN1Y2Nlc3MuZW1pdChzdWNjZXNzKSlcbiAgICAuY2F0Y2goZXJyb3IgPT4gdGhpcy5vbmVycm9yLmVtaXQoZXJyb3IpKTtcbiAgIH1cblxuICBnZXRTaGVldCgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICB0aGlzLnNoZWV0U2VydmljZS5nZXRTaGVldCh0aGlzLnNoZWV0T3B0aW9ucyx0aGlzLmh0bWxDb250ZW50KS50aGVuKHJlcyA9PiB7XG4gICAgICAgIGlmKHJlcy5oYXNPd25Qcm9wZXJ0eSgnZXhjZWxBc0h0bWwnKSAmJiByZXNbJ2V4Y2VsQXNIdG1sJ10ubGVuZ3RoID4gMCAmJiAhQXJyYXkuaXNBcnJheShyZXNbJ2V4Y2VsQXNIdG1sJ10pKSB7XG4gICAgICAgICAgaWYoISh0eXBlb2YgdGhpcy5zaGVldE9wdGlvbnMgPT09ICdvYmplY3QnICYmIHRoaXMuc2hlZXRPcHRpb25zLmhhc093blByb3BlcnR5KCdkb0FwcGVuZCcpICYmIHRoaXMuc2hlZXRPcHRpb25zLmRvQXBwZW5kID09PSB0cnVlKSkge1xuICAgICAgICAgICAgdGhpcy5lbC5uYXRpdmVFbGVtZW50LmlubmVySFRNTCA9IFwiXCI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnN0IGZyYWdtZW50ID0gZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKS5jcmVhdGVDb250ZXh0dWFsRnJhZ21lbnQocmVzWydleGNlbEFzSHRtbCddKTtcbiAgICAgICAgICB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZnJhZ21lbnQpO1xuICAgICAgICAgIHJldHVybiByZXNvbHZlKHJlcyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIHJlamVjdChyZXMpO1xuICAgICAgICB9XG4gICAgICB9KS5jYXRjaChlcnIgPT4gcmVqZWN0KGVycikpO1xuICAgIH0pO1xuICB9XG5cbn0iXX0=